var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["5.0","8000","add","allow","angular","angular/cor","app","auto","bootstrap","border","box","class","come","compon","console.log('el","content","continu","current","declar","demo","depend","dev","develop","direct","directori","document","drag","element","element/demo","element/doc","elementthen","enableghostres","environ","event","exampl","export","find","flesh","folder","gener","get","here","https://mattlewis92.github.io/angular","import","index","instal","licens","local","match","mit","modul","more","mwlresiz","mycompon","mymodul","ngmodul","node.j","now","npm","onc","onresizeend(ev","option","out","port","prepar","releas","releaselicens","reload","repo","requir","resiz","resizablemodul","resizeev","result","run","save","see","selector","server","size","sourc","start","style","tabl","templat","test","test:watch","through","us","view","void","within","work"],"overview.html":["1","2","6","class","direct","interfac","match","modul","overview","result"],"changelog.html":["0.0.1","0.0.2","0.0.3","0.1.0","0.2.0","0.2.1","0.3.0","0.3.1","0.3.2","0.3.3","0.4.0","0.4.1","0.5.0","0.5.1","0.5.2","0.5.3","0.5.4","0.5.5","0.5.6","0.5.7","0.6.0","0.6.1","0.7.0","0.7.2","0.8.0","0.8.1","01","02","03","032ea5a","04","0440bbd","05","053fb0e","05f7f7e","06","07","08","09","0959a12","0a5bf11","0ab7d40","1.0.0","1.1.0","1.1.1","1.1.2","1.2.0","1.2.1","1.2.2","1.2.3","1.2.4","1.2.5","10","10051cd","11","12","13","149c1a4","15","16","19","1af705a","1d15bb4","2.0.0","20","2016","2017","21","22","22af52f","23","23fc6e5","24","25","25cfe50","26","27","28","29","2a4b102","3","30","300ac10","31","33","34342aa","36","3633040","39","3ce508d","4","4.0","40","41","4b20cde","4c59b05","4c665d2","4da938d","5","5.5","514851f","520abc","53","54","54be6b7","5571069","59078e2","5d6a576","5f7f468","60c2e08","62","65","66","68","68dc84f","697c52c","70","71d5a05","72","74424ba","75ce122","79","7b1280e","8","80","81fe0b4","820612e","8232e66","858b3f8","8e3f108","9","9236e02","927235e","93a5c4","9557c0a","9597986","99d2f66","9c76aac","9f9c54a","a0323e9","a056154","a74f9e2","a8e5cd3","aa169c7","activ","add","af7abf7","allow","amount","angular","angular2","aot","app","appli","applic","auto","b77c9fc","bac87e3","back","be","be5d727","befor","before(resize)=\"onresize($ev","behaviour","bf497d2","boolean","bottom","bound","boundingrectangl","break","broken","browser","bug","build","bundl","c4519a1","c60b3f5","c76be59","call","camel","cancel","case","cbe088f","chang","changelog","class","clone","close","co","commit","compat","compil","complet","compon","con","config","configur","contain","core","corner","correct","creat","css","cssclass","cursor","cursorprecis","customis","d5b18cc","d5ea756","d664038","dash","dedc3bb","default","demo","depend","destroy","direct","disabl","disableres","dist","document","dont","drag","draghandl","drop","dynam","e722a86","each","eb314fd","edg","edit","effect","element","element.j","element.umd.j","element/bundles/angular","element/dist/umd/angular","enabl","enableghostres","enableresizestyl","enableresizestyling]=\"tru","ensur","entri","event","event.edg","exampl","export","expos","f24a746","f3fe12a","f440c87","fa73345","fe49114","featur","ffad2ca","file","fire","firefox","fit","fix","flicker","get","ghost","ghostelementposit","give","global","grid","guidelin","handl","handler","height","higher","host","ie11","implement","import","improv","includ","initi","insid","instanc","instead","interfac","js","keep","last","left","lettabl","librari","listen","log","longer","main","make","match","miss","modifi","mous","mousedown","mousedrag","mouseev","mousemov","mouseup","move","multipl","mwl","mwlresiz","mwlresizehandl","need","nest","new","ng","ng4","node","node_modules/angular","node_modules/angular2","notabl","now","number","object","observ","offlin","old","onres","onresizeend","onresizestart","oper","opt","ordin","output","outsid","over","packag","packagr","path","peer","peerdepend","perform","point","pojo","posit","post","precis","prefix","prevent","previou","project","properti","prototyp","provid","rc5","rc6","re","readm","rectangl","refer","regist","relax","remov","renam","requir","reset","resiz","resizable.j","resizable.jsaft","resizable/angular2","resizable/dist/umd/angular2","resizabledirect","resizablemodul","resizecursor","resizeedg","resizeedges]={top","resizeend","resizehandl","resizehandledirect","resizesnapgrid","resizestart","resizing)=\"onresizing($ev","result","reziz","right","run","rxj","scroll","seamless","see","select","selector","set","share","show","shown","snap","specifi","standard","start","startingrect","state","style","suffix","support","sync","system.j","templat","temporari","text","throttl","time","touch","transform","trigger","true","type","typescript","ui","umd","uncancel","univers","unsubscrib","up","updat","upgrad","us","user","valid","valu","version","via","w","warn","way","webkit","width","wip","within","yourself","zone"],"license.html":["2016","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","impli","includ","kind","lewi","liabil","liabl","licens","limit","match","matt","merchant","merg","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["brows","match","modul","resizablemodul","result"],"modules/ResizableModule.html":["angular/cor","class","declar","export","file","handle.direct","import","info","match","modul","ngmodul","resiz","resizable.direct","resizabledirect","resizablemodul","resizehandledirect","result","sourc","src/resizable.module.t"],"directives/ResizableDirective.html":["0","1","10","10px","2","3","50","absolut","activ","add","allow","allowededg","angular/cor","befor","begin","begun","between","boolean","bottom","boundingrect","boundingrect.bottom","boundingrect.height","boundingrect.left","boundingrect.right","boundingrect.top","boundingrect.width","boundingrectangl","call","cancel","class","clienti","clientrect","clientx","clonednod","const","constructor","constructor(render","coord","coordin","currentrect","currentres","currentresize!.currentrect","currentresize!.edg","currentresize!.startingrect","currentresize)).subscrib","currentresize.clonednod","currentresize.clonednode!.scrollleft","currentresize.clonednode!.scrolltop","currentresize.edg","currentresize.edges.bottom","currentresize.edges.left","currentresize.edges.right","currentresize.edges.top","currentresize.startingrect","currentresize.startingrect.height}px","currentresize.startingrect.left}px","currentresize.startingrect.top}px","currentresize.startingrect.width}px","cursor","cursorprecis","default","default_resize_cursor","defin","descript","diff","direct","document","drag","e.g","each","edg","edgesdiff","edgesdiff[edg","effect","element","element.nativeelement.getboundingclientrect","element.nativeelement.offsetheight","element.nativeelement.offsetleft","element.nativeelement.offsettop","element.nativeelement.offsetwidth","element.nativeelement.scrollleft","element.nativeelement.scrolltop","elementref","elm","enabl","enableghostres","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.interfac","event.preventdefault","event.targettouches[0].clienti","event.targettouches[0].clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","exampl","export","fals","fanci","file","filter","filter(([previouscoord","filter((edg","filter((newboundingrect","find(valu","fix","function","getdiff(movecoord","getdiff(newcoord","getdiff(previouscoord","getedgesdiff","getelementrect","getgrid","getgrid(newcoord","getinst","getnewboundingrectangl","getnewboundingrectangle(startingrect","getresizecursor","getresizecursor(currentresize.edg","getresizecursor(resizeedg","getresizeedg","getsnapgrid","ghost","ghostelementposit","grid","height","hidden","hover","html","htmlelement","implement","import","index","info","inherit","initialrectangl","initialrectangle[edg","input","instanc","interfac","interfaces/bound","interfaces/edges.interfac","interfaces/res","interv","interval(mouse_move_throttle_m","isnumbercloseto","iswithinboundingi","left","line","lock","make","map","map(([previouscoord","match","math.abs(value1","math.ceil(coords.clienti","math.ceil(coords.clientx","math.round(newcoords.clienti","math.round(newcoords.clientx","merg","mergemap","mergemap(startcoord","metadata","mous","mouse_move_throttle_m","mousedown","mousedrag","mouseev","mousemov","mousemove.pipe(filt","mousemove.pipe(pairwis","mousemove.pipe(take(1)).pipe(map(coord","mouseup","movecoords.clienti","movecoords.clientx","mwlresiz","name","new","newboundingrect","newboundingrect.height","newboundingrect.height}px","newboundingrect.left}px","newboundingrect.top}px","newboundingrect.width","newboundingrect.width}px","newcoord","newgrid","newgrid.i","newgrid.x","newrectangl","newrectangle[edg","ngondestroy","ngoninit","ngzone","null","number","object","object.assign","object.keys(edges).length","observ","observable.merge'","observer.next","ondestroy","oninit","output","over","pairwis","pass","pipe","pipe(filt","pipe(shar","pipe(takeuntil(merge(this.mouseup","pipe(throttl","place","pointerdown","pointereventcoordin","pointereventlisten","pointereventlisteners.getinst","pointereventlisteners.inst","pointereventlistenersubscript","pointermov","pointerup","posit","precis","press","previouscoord","previousgrid","previousgrid.i","previousgrid.x","privat","propag","public","px","rect","rect.left","rect.top","rectangl","rectangle.interfac","releas","removeghostel","render","renderer.listen","renderer2","resiz","resizabledirect","resize_active_class","resize_bottom_hover_class","resize_ghost_element_class","resize_left_hover_class","resize_right_hover_class","resize_top_hover_class","resizecursor","resizecursorprecis","resizeedg","resizeedges.bottom","resizeedges.left","resizeedges.right","resizeedges.top","resizeend","resizeev","resizesnapgrid","resizestart","result","return","right","rxjs/observ","rxjs/observable/interv","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takeuntil","rxjs/operators/throttl","rxjs/subject","scrollleft","scrolltop","selector","set","setelementclass(elm","share","snap","snapgrid","snapgrid.i","snapgrid.x","sourc","src/resizable.directive.t","src/resizable.directive.ts:281","src/resizable.directive.ts:286","src/resizable.directive.ts:291","src/resizable.directive.ts:298","src/resizable.directive.ts:303","src/resizable.directive.ts:308","src/resizable.directive.ts:313","src/resizable.directive.ts:318","src/resizable.directive.ts:323","src/resizable.directive.ts:328","startcoords.clienti","startcoords.clientx","startingrect","static","string","style[properti","subject","subscrib","subscribe((edg","subscribe((newboundingrect","take","takeuntil","temporari","thick","this.elm","this.elm.nativeel","this.elm.nativeelement.clonenode(tru","this.elm.nativeelement.parentelement.appendchild","this.elm.nativeelement.parentelement.removechild","this.enableghostres","this.ghostelementposit","this.mousedown","this.mousedown.complet","this.mousedown.next","this.mousemove.complet","this.mousemove.next","this.mousemove.pipe(shar","this.mouseup.complet","this.mouseup.next","this.mouseup.subscrib","this.pointerdown","this.pointereventlisten","this.pointereventlisteners.pointerdown.subscrib","this.pointereventlisteners.pointermove.subscrib","this.pointereventlisteners.pointerup.subscrib","this.pointereventlistenersubscriptions.pointerdown","this.pointereventlistenersubscriptions.pointerdown.unsubscrib","this.pointereventlistenersubscriptions.pointermov","this.pointereventlistenersubscriptions.pointermove.unsubscrib","this.pointereventlistenersubscriptions.pointerup","this.pointereventlistenersubscriptions.pointerup.unsubscrib","this.pointermov","this.pointerup","this.renderer.addclass","this.renderer.addclass(elm.nativeel","this.renderer.removeclass(elm.nativeel","this.renderer.removeclass(this.elm.nativeel","this.renderer.setstyl","this.renderer.setstyle(document.bodi","this.renderer.setstyle(this.elm.nativeel","this.resizecursor","this.resizecursorprecis","this.resizeedg","this.resizeend.emit","this.resizesnapgrid.bottom","this.resizesnapgrid.left","this.resizesnapgrid.right","this.resizesnapgrid.top","this.resizestart.emit","this.resizing.emit","this.setelementclass","this.setelementclass(this.elm","this.validateres","this.zone.run","throttl","todo","top","touchcancel","touchend","touchev","touchmov","touchstart","transform","transform.includes('transl","transform.replace(/.*translate\\((.*)px","translatex","translatey","true","tslint:dis","type","unsubscribemousedown","unsubscribemousemov","unsubscribemouseup","unsubscribetouchcancel","unsubscribetouchend","unsubscribetouchmov","unsubscribetouchstart","us","validateres","valu","value1","value2","visibl","void","width","x","y","zone","zone.runoutsideangular"],"directives/ResizeHandleDirective.html":["angular/cor","any).eventlisteners[typ","argument","class","clienti","clientx","constructor","constructor(render","contain","default","defin","delet","descript","direct","drag","edg","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.preventdefault","event.touches[0].clienti","event.touches[0].clientx","eventlisten","exampl","export","file","handl","handle.directive.t","handle.directive.ts:111","handle.directive.ts:31","handle.directive.ts:36","handle.directive.ts:58","hidden","hostlisten","hostlistener('mousedown","hostlistener('mouseup","hostlistener('touchcancel","hostlistener('touchend","hostlistener('touchstart","html","implement","import","index","info","input","insid","interfaces/edges.interfac","match","metadata","mouseev","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mwlresiz","mwlresizehandl","name","ngondestroy","ngzone","number","object","object.keys(this.eventlisteners).foreach","ondestroy","onmousedown","onmousemov","onmouseup(clientx","option","paramet","parent","place","privat","render","renderer2","resiz","resizable.direct","resizabledirect","resizeedg","resizehandledirect","result","selector","sourc","src/resiz","this.element.nativeel","this.eventlisteners.mousemov","this.eventlisteners.touchmov","this.eventlisteners[typ","this.onmousemov","this.renderer.listen","this.resizable.mousedown.next","this.resizable.mousemove.next","this.resizable.mouseup.next","this.resizeedg","this.unsubscribeeventlisten","this.zone.runoutsideangular","touchend","touchend(clientx","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","touchstart(ev","trigger","type","unsubscribeeventlisten","us","valu","void","zone"],"classes/PointerEventListeners.html":["0","1","10","10px","2","3","50","absolut","activ","add","allow","allowededg","angular/cor","befor","begin","begun","between","boolean","bottom","boundingrect","boundingrect.bottom","boundingrect.height","boundingrect.left","boundingrect.right","boundingrect.top","boundingrect.width","boundingrectangl","call","cancel","class","clienti","clientrect","clientx","clonednod","const","constructor","constructor(render","coord","coordin","currentrect","currentres","currentresize!.currentrect","currentresize!.edg","currentresize!.startingrect","currentresize)).subscrib","currentresize.clonednod","currentresize.clonednode!.scrollleft","currentresize.clonednode!.scrolltop","currentresize.edg","currentresize.edges.bottom","currentresize.edges.left","currentresize.edges.right","currentresize.edges.top","currentresize.startingrect","currentresize.startingrect.height}px","currentresize.startingrect.left}px","currentresize.startingrect.top}px","currentresize.startingrect.width}px","cursor","cursorprecis","default","default_resize_cursor","defin","descript","diff","direct","document","drag","e.g","each","edg","edgesdiff","edgesdiff[edg","effect","element","element.nativeelement.getboundingclientrect","element.nativeelement.offsetheight","element.nativeelement.offsetleft","element.nativeelement.offsettop","element.nativeelement.offsetwidth","element.nativeelement.scrollleft","element.nativeelement.scrolltop","elementref","elm","enabl","enableghostres","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.interfac","event.preventdefault","event.targettouches[0].clienti","event.targettouches[0].clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","exampl","export","fals","fanci","file","filter","filter(([previouscoord","filter((edg","filter((newboundingrect","find(valu","fix","function","getdiff(movecoord","getdiff(newcoord","getdiff(previouscoord","getedgesdiff","getelementrect","getgrid","getgrid(newcoord","getinst","getinstance(render","getnewboundingrectangl","getnewboundingrectangle(startingrect","getresizecursor","getresizecursor(currentresize.edg","getresizecursor(resizeedg","getresizeedg","getsnapgrid","ghost","ghostelementposit","grid","height","hidden","hover","html","htmlelement","implement","import","index","info","inherit","initialrectangl","initialrectangle[edg","input","instanc","interfac","interfaces/bound","interfaces/edges.interfac","interfaces/res","interv","interval(mouse_move_throttle_m","isnumbercloseto","iswithinboundingi","left","line","lock","make","map","map(([previouscoord","match","math.abs(value1","math.ceil(coords.clienti","math.ceil(coords.clientx","math.round(newcoords.clienti","math.round(newcoords.clientx","merg","mergemap","mergemap(startcoord","method","mous","mouse_move_throttle_m","mousedown","mousedrag","mouseev","mousemov","mousemove.pipe(filt","mousemove.pipe(pairwis","mousemove.pipe(take(1)).pipe(map(coord","mouseup","movecoords.clienti","movecoords.clientx","mwlresiz","name","new","newboundingrect","newboundingrect.height","newboundingrect.height}px","newboundingrect.left}px","newboundingrect.top}px","newboundingrect.width","newboundingrect.width}px","newcoord","newgrid","newgrid.i","newgrid.x","newrectangl","newrectangle[edg","ngondestroy","ngoninit","ngzone","null","number","object","object.assign","object.keys(edges).length","observ","observable.merge'","observer.next","ondestroy","oninit","option","output","over","pairwis","paramet","pass","pipe","pipe(filt","pipe(shar","pipe(takeuntil(merge(this.mouseup","pipe(throttl","place","pointerdown","pointereventcoordin","pointereventlisten","pointereventlisteners.getinst","pointereventlisteners.inst","pointereventlistenersubscript","pointermov","pointerup","posit","precis","press","previouscoord","previousgrid","previousgrid.i","previousgrid.x","privat","propag","properti","public","px","rect","rect.left","rect.top","rectangl","rectangle.interfac","releas","removeghostel","render","renderer.listen","renderer2","resiz","resizabledirect","resize_active_class","resize_bottom_hover_class","resize_ghost_element_class","resize_left_hover_class","resize_right_hover_class","resize_top_hover_class","resizecursor","resizecursorprecis","resizeedg","resizeedges.bottom","resizeedges.left","resizeedges.right","resizeedges.top","resizeend","resizeev","resizesnapgrid","resizestart","result","return","right","rxjs/observ","rxjs/observable/interv","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takeuntil","rxjs/operators/throttl","rxjs/subject","scrollleft","scrolltop","selector","set","setelementclass(elm","share","snap","snapgrid","snapgrid.i","snapgrid.x","sourc","src/resizable.directive.t","src/resizable.directive.ts:776","src/resizable.directive.ts:778","src/resizable.directive.ts:780","src/resizable.directive.ts:784","src/resizable.directive.ts:795","startcoords.clienti","startcoords.clientx","startingrect","static","string","style[properti","subject","subscrib","subscribe((edg","subscribe((newboundingrect","take","takeuntil","temporari","thick","this.elm","this.elm.nativeel","this.elm.nativeelement.clonenode(tru","this.elm.nativeelement.parentelement.appendchild","this.elm.nativeelement.parentelement.removechild","this.enableghostres","this.ghostelementposit","this.mousedown","this.mousedown.complet","this.mousedown.next","this.mousemove.complet","this.mousemove.next","this.mousemove.pipe(shar","this.mouseup.complet","this.mouseup.next","this.mouseup.subscrib","this.pointerdown","this.pointereventlisten","this.pointereventlisteners.pointerdown.subscrib","this.pointereventlisteners.pointermove.subscrib","this.pointereventlisteners.pointerup.subscrib","this.pointereventlistenersubscriptions.pointerdown","this.pointereventlistenersubscriptions.pointerdown.unsubscrib","this.pointereventlistenersubscriptions.pointermov","this.pointereventlistenersubscriptions.pointermove.unsubscrib","this.pointereventlistenersubscriptions.pointerup","this.pointereventlistenersubscriptions.pointerup.unsubscrib","this.pointermov","this.pointerup","this.renderer.addclass","this.renderer.addclass(elm.nativeel","this.renderer.removeclass(elm.nativeel","this.renderer.removeclass(this.elm.nativeel","this.renderer.setstyl","this.renderer.setstyle(document.bodi","this.renderer.setstyle(this.elm.nativeel","this.resizecursor","this.resizecursorprecis","this.resizeedg","this.resizeend.emit","this.resizesnapgrid.bottom","this.resizesnapgrid.left","this.resizesnapgrid.right","this.resizesnapgrid.top","this.resizestart.emit","this.resizing.emit","this.setelementclass","this.setelementclass(this.elm","this.validateres","this.zone.run","throttl","todo","top","touchcancel","touchend","touchev","touchmov","touchstart","transform","transform.includes('transl","transform.replace(/.*translate\\((.*)px","translatex","translatey","true","tslint:dis","type","unsubscribemousedown","unsubscribemousemov","unsubscribemouseup","unsubscribetouchcancel","unsubscribetouchend","unsubscribetouchmov","unsubscribetouchstart","us","validateres","valu","value1","value2","visibl","void","width","x","y","zone","zone.runoutsideangular"],"interfaces/BoundingRectangle.html":["bottom","bound","boundingrectangl","defin","descript","element","export","file","height","index","info","interfac","left","match","number","properti","rectangl","rectangle.interface.t","rectangle.interface.ts:10","rectangle.interface.ts:11","rectangle.interface.ts:12","rectangle.interface.ts:5","rectangle.interface.ts:6","rectangle.interface.ts:7","rectangle.interface.ts:8","rectangle.interface.ts:9","resiz","result","right","scrollleft","scrolltop","sourc","src/interfaces/bound","top","type","width"],"interfaces/Coordinate.html":["0","1","10","10px","2","3","50","absolut","activ","add","allow","allowededg","angular/cor","befor","begin","begun","between","boolean","bottom","boundingrect","boundingrect.bottom","boundingrect.height","boundingrect.left","boundingrect.right","boundingrect.top","boundingrect.width","boundingrectangl","call","cancel","class","clienti","clientrect","clientx","clonednod","const","constructor","constructor(render","coord","coordin","currentrect","currentres","currentresize!.currentrect","currentresize!.edg","currentresize!.startingrect","currentresize)).subscrib","currentresize.clonednod","currentresize.clonednode!.scrollleft","currentresize.clonednode!.scrolltop","currentresize.edg","currentresize.edges.bottom","currentresize.edges.left","currentresize.edges.right","currentresize.edges.top","currentresize.startingrect","currentresize.startingrect.height}px","currentresize.startingrect.left}px","currentresize.startingrect.top}px","currentresize.startingrect.width}px","cursor","cursorprecis","default","default_resize_cursor","defin","diff","direct","document","drag","e.g","each","edg","edgesdiff","edgesdiff[edg","effect","element","element.nativeelement.getboundingclientrect","element.nativeelement.offsetheight","element.nativeelement.offsetleft","element.nativeelement.offsettop","element.nativeelement.offsetwidth","element.nativeelement.scrollleft","element.nativeelement.scrolltop","elementref","elm","enabl","enableghostres","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.interfac","event.preventdefault","event.targettouches[0].clienti","event.targettouches[0].clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","exampl","export","fals","fanci","file","filter","filter(([previouscoord","filter((edg","filter((newboundingrect","find(valu","fix","function","getdiff(movecoord","getdiff(newcoord","getdiff(previouscoord","getedgesdiff","getelementrect","getgrid","getgrid(newcoord","getinst","getnewboundingrectangl","getnewboundingrectangle(startingrect","getresizecursor","getresizecursor(currentresize.edg","getresizecursor(resizeedg","getresizeedg","getsnapgrid","ghost","ghostelementposit","grid","height","hidden","hover","html","htmlelement","implement","import","index","info","inherit","initialrectangl","initialrectangle[edg","input","instanc","interfac","interfaces/bound","interfaces/edges.interfac","interfaces/res","interv","interval(mouse_move_throttle_m","isnumbercloseto","iswithinboundingi","left","line","lock","make","map","map(([previouscoord","match","math.abs(value1","math.ceil(coords.clienti","math.ceil(coords.clientx","math.round(newcoords.clienti","math.round(newcoords.clientx","merg","mergemap","mergemap(startcoord","mous","mouse_move_throttle_m","mousedown","mousedrag","mouseev","mousemov","mousemove.pipe(filt","mousemove.pipe(pairwis","mousemove.pipe(take(1)).pipe(map(coord","mouseup","movecoords.clienti","movecoords.clientx","mwlresiz","name","new","newboundingrect","newboundingrect.height","newboundingrect.height}px","newboundingrect.left}px","newboundingrect.top}px","newboundingrect.width","newboundingrect.width}px","newcoord","newgrid","newgrid.i","newgrid.x","newrectangl","newrectangle[edg","ngondestroy","ngoninit","ngzone","null","number","object","object.assign","object.keys(edges).length","observ","observable.merge'","observer.next","ondestroy","oninit","output","over","pairwis","pass","pipe","pipe(filt","pipe(shar","pipe(takeuntil(merge(this.mouseup","pipe(throttl","place","pointerdown","pointereventcoordin","pointereventlisten","pointereventlisteners.getinst","pointereventlisteners.inst","pointereventlistenersubscript","pointermov","pointerup","posit","precis","press","previouscoord","previousgrid","previousgrid.i","previousgrid.x","privat","propag","properti","public","px","rect","rect.left","rect.top","rectangl","rectangle.interfac","releas","removeghostel","render","renderer.listen","renderer2","resiz","resizabledirect","resize_active_class","resize_bottom_hover_class","resize_ghost_element_class","resize_left_hover_class","resize_right_hover_class","resize_top_hover_class","resizecursor","resizecursorprecis","resizeedg","resizeedges.bottom","resizeedges.left","resizeedges.right","resizeedges.top","resizeend","resizeev","resizesnapgrid","resizestart","result","return","right","rxjs/observ","rxjs/observable/interv","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takeuntil","rxjs/operators/throttl","rxjs/subject","scrollleft","scrolltop","selector","set","setelementclass(elm","share","snap","snapgrid","snapgrid.i","snapgrid.x","sourc","src/resizable.directive.t","src/resizable.directive.ts:36","src/resizable.directive.ts:37","startcoords.clienti","startcoords.clientx","startingrect","static","string","style[properti","subject","subscrib","subscribe((edg","subscribe((newboundingrect","take","takeuntil","temporari","thick","this.elm","this.elm.nativeel","this.elm.nativeelement.clonenode(tru","this.elm.nativeelement.parentelement.appendchild","this.elm.nativeelement.parentelement.removechild","this.enableghostres","this.ghostelementposit","this.mousedown","this.mousedown.complet","this.mousedown.next","this.mousemove.complet","this.mousemove.next","this.mousemove.pipe(shar","this.mouseup.complet","this.mouseup.next","this.mouseup.subscrib","this.pointerdown","this.pointereventlisten","this.pointereventlisteners.pointerdown.subscrib","this.pointereventlisteners.pointermove.subscrib","this.pointereventlisteners.pointerup.subscrib","this.pointereventlistenersubscriptions.pointerdown","this.pointereventlistenersubscriptions.pointerdown.unsubscrib","this.pointereventlistenersubscriptions.pointermov","this.pointereventlistenersubscriptions.pointermove.unsubscrib","this.pointereventlistenersubscriptions.pointerup","this.pointereventlistenersubscriptions.pointerup.unsubscrib","this.pointermov","this.pointerup","this.renderer.addclass","this.renderer.addclass(elm.nativeel","this.renderer.removeclass(elm.nativeel","this.renderer.removeclass(this.elm.nativeel","this.renderer.setstyl","this.renderer.setstyle(document.bodi","this.renderer.setstyle(this.elm.nativeel","this.resizecursor","this.resizecursorprecis","this.resizeedg","this.resizeend.emit","this.resizesnapgrid.bottom","this.resizesnapgrid.left","this.resizesnapgrid.right","this.resizesnapgrid.top","this.resizestart.emit","this.resizing.emit","this.setelementclass","this.setelementclass(this.elm","this.validateres","this.zone.run","throttl","todo","top","touchcancel","touchend","touchev","touchmov","touchstart","transform","transform.includes('transl","transform.replace(/.*translate\\((.*)px","translatex","translatey","true","tslint:dis","type","unsubscribemousedown","unsubscribemousemov","unsubscribemouseup","unsubscribetouchcancel","unsubscribetouchend","unsubscribetouchmov","unsubscribetouchstart","us","validateres","valu","value1","value2","visibl","void","width","x","y","zone","zone.runoutsideangular"],"interfaces/Edges.html":["boolean","bottom","defin","descript","edg","event","export","file","index","info","interfac","left","match","number","properti","resiz","result","right","sourc","src/interfaces/edges.interface.t","src/interfaces/edges.interface.ts:5","src/interfaces/edges.interface.ts:6","src/interfaces/edges.interface.ts:7","src/interfaces/edges.interface.ts:8","top","trigger","type"],"interfaces/PointerEventCoordinate.html":["0","1","10","10px","2","3","50","absolut","activ","add","allow","allowededg","angular/cor","befor","begin","begun","between","boolean","bottom","boundingrect","boundingrect.bottom","boundingrect.height","boundingrect.left","boundingrect.right","boundingrect.top","boundingrect.width","boundingrectangl","call","cancel","class","clienti","clientrect","clientx","clonednod","const","constructor","constructor(render","coord","coordin","currentrect","currentres","currentresize!.currentrect","currentresize!.edg","currentresize!.startingrect","currentresize)).subscrib","currentresize.clonednod","currentresize.clonednode!.scrollleft","currentresize.clonednode!.scrolltop","currentresize.edg","currentresize.edges.bottom","currentresize.edges.left","currentresize.edges.right","currentresize.edges.top","currentresize.startingrect","currentresize.startingrect.height}px","currentresize.startingrect.left}px","currentresize.startingrect.top}px","currentresize.startingrect.width}px","cursor","cursorprecis","default","default_resize_cursor","defin","diff","direct","document","drag","e.g","each","edg","edgesdiff","edgesdiff[edg","effect","element","element.nativeelement.getboundingclientrect","element.nativeelement.offsetheight","element.nativeelement.offsetleft","element.nativeelement.offsettop","element.nativeelement.offsetwidth","element.nativeelement.scrollleft","element.nativeelement.scrolltop","elementref","elm","enabl","enableghostres","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.interfac","event.preventdefault","event.targettouches[0].clienti","event.targettouches[0].clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","exampl","export","fals","fanci","file","filter","filter(([previouscoord","filter((edg","filter((newboundingrect","find(valu","fix","function","getdiff(movecoord","getdiff(newcoord","getdiff(previouscoord","getedgesdiff","getelementrect","getgrid","getgrid(newcoord","getinst","getnewboundingrectangl","getnewboundingrectangle(startingrect","getresizecursor","getresizecursor(currentresize.edg","getresizecursor(resizeedg","getresizeedg","getsnapgrid","ghost","ghostelementposit","grid","height","hidden","hover","html","htmlelement","implement","import","index","info","inherit","initialrectangl","initialrectangle[edg","input","instanc","interfac","interfaces/bound","interfaces/edges.interfac","interfaces/res","interv","interval(mouse_move_throttle_m","isnumbercloseto","iswithinboundingi","left","line","lock","make","map","map(([previouscoord","match","math.abs(value1","math.ceil(coords.clienti","math.ceil(coords.clientx","math.round(newcoords.clienti","math.round(newcoords.clientx","merg","mergemap","mergemap(startcoord","mous","mouse_move_throttle_m","mousedown","mousedrag","mouseev","mousemov","mousemove.pipe(filt","mousemove.pipe(pairwis","mousemove.pipe(take(1)).pipe(map(coord","mouseup","movecoords.clienti","movecoords.clientx","mwlresiz","name","new","newboundingrect","newboundingrect.height","newboundingrect.height}px","newboundingrect.left}px","newboundingrect.top}px","newboundingrect.width","newboundingrect.width}px","newcoord","newgrid","newgrid.i","newgrid.x","newrectangl","newrectangle[edg","ngondestroy","ngoninit","ngzone","null","number","object","object.assign","object.keys(edges).length","observ","observable.merge'","observer.next","ondestroy","oninit","output","over","pairwis","pass","pipe","pipe(filt","pipe(shar","pipe(takeuntil(merge(this.mouseup","pipe(throttl","place","pointerdown","pointereventcoordin","pointereventlisten","pointereventlisteners.getinst","pointereventlisteners.inst","pointereventlistenersubscript","pointermov","pointerup","posit","precis","press","previouscoord","previousgrid","previousgrid.i","previousgrid.x","privat","propag","properti","public","px","rect","rect.left","rect.top","rectangl","rectangle.interfac","releas","removeghostel","render","renderer.listen","renderer2","resiz","resizabledirect","resize_active_class","resize_bottom_hover_class","resize_ghost_element_class","resize_left_hover_class","resize_right_hover_class","resize_top_hover_class","resizecursor","resizecursorprecis","resizeedg","resizeedges.bottom","resizeedges.left","resizeedges.right","resizeedges.top","resizeend","resizeev","resizesnapgrid","resizestart","result","return","right","rxjs/observ","rxjs/observable/interv","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takeuntil","rxjs/operators/throttl","rxjs/subject","scrollleft","scrolltop","selector","set","setelementclass(elm","share","snap","snapgrid","snapgrid.i","snapgrid.x","sourc","src/resizable.directive.t","src/resizable.directive.ts:30","src/resizable.directive.ts:31","src/resizable.directive.ts:32","startcoords.clienti","startcoords.clientx","startingrect","static","string","style[properti","subject","subscrib","subscribe((edg","subscribe((newboundingrect","take","takeuntil","temporari","thick","this.elm","this.elm.nativeel","this.elm.nativeelement.clonenode(tru","this.elm.nativeelement.parentelement.appendchild","this.elm.nativeelement.parentelement.removechild","this.enableghostres","this.ghostelementposit","this.mousedown","this.mousedown.complet","this.mousedown.next","this.mousemove.complet","this.mousemove.next","this.mousemove.pipe(shar","this.mouseup.complet","this.mouseup.next","this.mouseup.subscrib","this.pointerdown","this.pointereventlisten","this.pointereventlisteners.pointerdown.subscrib","this.pointereventlisteners.pointermove.subscrib","this.pointereventlisteners.pointerup.subscrib","this.pointereventlistenersubscriptions.pointerdown","this.pointereventlistenersubscriptions.pointerdown.unsubscrib","this.pointereventlistenersubscriptions.pointermov","this.pointereventlistenersubscriptions.pointermove.unsubscrib","this.pointereventlistenersubscriptions.pointerup","this.pointereventlistenersubscriptions.pointerup.unsubscrib","this.pointermov","this.pointerup","this.renderer.addclass","this.renderer.addclass(elm.nativeel","this.renderer.removeclass(elm.nativeel","this.renderer.removeclass(this.elm.nativeel","this.renderer.setstyl","this.renderer.setstyle(document.bodi","this.renderer.setstyle(this.elm.nativeel","this.resizecursor","this.resizecursorprecis","this.resizeedg","this.resizeend.emit","this.resizesnapgrid.bottom","this.resizesnapgrid.left","this.resizesnapgrid.right","this.resizesnapgrid.top","this.resizestart.emit","this.resizing.emit","this.setelementclass","this.setelementclass(this.elm","this.validateres","this.zone.run","throttl","todo","top","touchcancel","touchend","touchev","touchmov","touchstart","transform","transform.includes('transl","transform.replace(/.*translate\\((.*)px","translatex","translatey","true","tslint:dis","type","unsubscribemousedown","unsubscribemousemov","unsubscribemouseup","unsubscribetouchcancel","unsubscribetouchend","unsubscribetouchmov","unsubscribetouchstart","us","validateres","valu","value1","value2","visibl","void","width","x","y","zone","zone.runoutsideangular"],"interfaces/ResizeCursors.html":["0","1","10","10px","2","3","50","absolut","activ","add","allow","allowededg","angular/cor","befor","begin","begun","between","boolean","bottom","bottomleft","bottomright","boundingrect","boundingrect.bottom","boundingrect.height","boundingrect.left","boundingrect.right","boundingrect.top","boundingrect.width","boundingrectangl","call","cancel","class","clienti","clientrect","clientx","clonednod","const","constructor","constructor(render","coord","coordin","currentrect","currentres","currentresize!.currentrect","currentresize!.edg","currentresize!.startingrect","currentresize)).subscrib","currentresize.clonednod","currentresize.clonednode!.scrollleft","currentresize.clonednode!.scrolltop","currentresize.edg","currentresize.edges.bottom","currentresize.edges.left","currentresize.edges.right","currentresize.edges.top","currentresize.startingrect","currentresize.startingrect.height}px","currentresize.startingrect.left}px","currentresize.startingrect.top}px","currentresize.startingrect.width}px","cursor","cursorprecis","default","default_resize_cursor","defin","diff","direct","document","drag","e.g","each","edg","edgesdiff","edgesdiff[edg","effect","element","element.nativeelement.getboundingclientrect","element.nativeelement.offsetheight","element.nativeelement.offsetleft","element.nativeelement.offsettop","element.nativeelement.offsetwidth","element.nativeelement.scrollleft","element.nativeelement.scrolltop","elementref","elm","enabl","enableghostres","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.interfac","event.preventdefault","event.targettouches[0].clienti","event.targettouches[0].clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","exampl","export","fals","fanci","file","filter","filter(([previouscoord","filter((edg","filter((newboundingrect","find(valu","fix","function","getdiff(movecoord","getdiff(newcoord","getdiff(previouscoord","getedgesdiff","getelementrect","getgrid","getgrid(newcoord","getinst","getnewboundingrectangl","getnewboundingrectangle(startingrect","getresizecursor","getresizecursor(currentresize.edg","getresizecursor(resizeedg","getresizeedg","getsnapgrid","ghost","ghostelementposit","grid","height","hidden","hover","html","htmlelement","implement","import","index","info","inherit","initialrectangl","initialrectangle[edg","input","instanc","interfac","interfaces/bound","interfaces/edges.interfac","interfaces/res","interv","interval(mouse_move_throttle_m","isnumbercloseto","iswithinboundingi","left","leftorright","line","lock","make","map","map(([previouscoord","match","math.abs(value1","math.ceil(coords.clienti","math.ceil(coords.clientx","math.round(newcoords.clienti","math.round(newcoords.clientx","merg","mergemap","mergemap(startcoord","mous","mouse_move_throttle_m","mousedown","mousedrag","mouseev","mousemov","mousemove.pipe(filt","mousemove.pipe(pairwis","mousemove.pipe(take(1)).pipe(map(coord","mouseup","movecoords.clienti","movecoords.clientx","mwlresiz","name","new","newboundingrect","newboundingrect.height","newboundingrect.height}px","newboundingrect.left}px","newboundingrect.top}px","newboundingrect.width","newboundingrect.width}px","newcoord","newgrid","newgrid.i","newgrid.x","newrectangl","newrectangle[edg","ngondestroy","ngoninit","ngzone","null","number","object","object.assign","object.keys(edges).length","observ","observable.merge'","observer.next","ondestroy","oninit","output","over","pairwis","pass","pipe","pipe(filt","pipe(shar","pipe(takeuntil(merge(this.mouseup","pipe(throttl","place","pointerdown","pointereventcoordin","pointereventlisten","pointereventlisteners.getinst","pointereventlisteners.inst","pointereventlistenersubscript","pointermov","pointerup","posit","precis","press","previouscoord","previousgrid","previousgrid.i","previousgrid.x","privat","propag","properti","public","px","rect","rect.left","rect.top","rectangl","rectangle.interfac","releas","removeghostel","render","renderer.listen","renderer2","resiz","resizabledirect","resize_active_class","resize_bottom_hover_class","resize_ghost_element_class","resize_left_hover_class","resize_right_hover_class","resize_top_hover_class","resizecursor","resizecursorprecis","resizeedg","resizeedges.bottom","resizeedges.left","resizeedges.right","resizeedges.top","resizeend","resizeev","resizesnapgrid","resizestart","result","return","right","rxjs/observ","rxjs/observable/interv","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takeuntil","rxjs/operators/throttl","rxjs/subject","scrollleft","scrolltop","selector","set","setelementclass(elm","share","snap","snapgrid","snapgrid.i","snapgrid.x","sourc","src/resizable.directive.t","src/resizable.directive.ts:203","src/resizable.directive.ts:204","src/resizable.directive.ts:205","src/resizable.directive.ts:206","src/resizable.directive.ts:207","src/resizable.directive.ts:208","startcoords.clienti","startcoords.clientx","startingrect","static","string","style[properti","subject","subscrib","subscribe((edg","subscribe((newboundingrect","take","takeuntil","temporari","thick","this.elm","this.elm.nativeel","this.elm.nativeelement.clonenode(tru","this.elm.nativeelement.parentelement.appendchild","this.elm.nativeelement.parentelement.removechild","this.enableghostres","this.ghostelementposit","this.mousedown","this.mousedown.complet","this.mousedown.next","this.mousemove.complet","this.mousemove.next","this.mousemove.pipe(shar","this.mouseup.complet","this.mouseup.next","this.mouseup.subscrib","this.pointerdown","this.pointereventlisten","this.pointereventlisteners.pointerdown.subscrib","this.pointereventlisteners.pointermove.subscrib","this.pointereventlisteners.pointerup.subscrib","this.pointereventlistenersubscriptions.pointerdown","this.pointereventlistenersubscriptions.pointerdown.unsubscrib","this.pointereventlistenersubscriptions.pointermov","this.pointereventlistenersubscriptions.pointermove.unsubscrib","this.pointereventlistenersubscriptions.pointerup","this.pointereventlistenersubscriptions.pointerup.unsubscrib","this.pointermov","this.pointerup","this.renderer.addclass","this.renderer.addclass(elm.nativeel","this.renderer.removeclass(elm.nativeel","this.renderer.removeclass(this.elm.nativeel","this.renderer.setstyl","this.renderer.setstyle(document.bodi","this.renderer.setstyle(this.elm.nativeel","this.resizecursor","this.resizecursorprecis","this.resizeedg","this.resizeend.emit","this.resizesnapgrid.bottom","this.resizesnapgrid.left","this.resizesnapgrid.right","this.resizesnapgrid.top","this.resizestart.emit","this.resizing.emit","this.setelementclass","this.setelementclass(this.elm","this.validateres","this.zone.run","throttl","todo","top","topleft","toporbottom","topright","touchcancel","touchend","touchev","touchmov","touchstart","transform","transform.includes('transl","transform.replace(/.*translate\\((.*)px","translatex","translatey","true","tslint:dis","type","unsubscribemousedown","unsubscribemousemov","unsubscribemouseup","unsubscribetouchcancel","unsubscribetouchend","unsubscribetouchmov","unsubscribetouchstart","us","validateres","valu","value1","value2","visibl","void","width","x","y","zone","zone.runoutsideangular"],"interfaces/ResizeEvent.html":["bound","boundingrectangl","defin","descript","edg","edges.interfac","event","event.interface.t","event.interface.ts:8","event.interface.ts:9","export","file","import","index","info","interfac","match","object","pass","properti","rectangl","rectangle.interfac","resiz","resizeev","result","sourc","src/interfaces/res","type"],"miscellaneous/functions.html":["clienti","clientx","cursor","descript","edg","element","function","getedgesdiff","getedgesdiff(undefin","getelementrect","getelementrect(el","getnewboundingrectangl","getnewboundingrectangle(startingrect","getresizecursor","getresizecursor(edg","getresizeedg","getresizeedges(undefin","ghostelementposit","index","isnumbercloseto","isnumbercloseto(value1","iswithinboundingi","iswithinboundingx","iswithinboundingx(undefin","iswithinboundingy(undefin","match","miscellan","name","number","option","paramet","precis","result","src/resizable.directive.t","startingrect","string","type","typerefer","undefin","value1","value2"],"miscellaneous/variables.html":["50","activ","bottom","bottomleft","bottomright","default","default_resize_cursor","element","ew","ghost","hover","index","left","leftorright","match","miscellan","mouse_move_throttle_m","ne","ns","number","nw","object.freez","resiz","resize_active_class","resize_bottom_hover_class","resize_ghost_element_class","resize_left_hover_class","resize_right_hover_class","resize_top_hover_class","resizecursor","result","right","se","src/resizable.directive.t","string","sw","top","topleft","toporbottom","topright","type","valu","variabl"]},"length":17},"tokenStore":{"root":{"0":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}},"3":{"2":{"docs":{},"e":{"docs":{},"a":{"5":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006085192697768763}}},"4":{"4":{"0":{"docs":{},"b":{"docs":{},"b":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"5":{"3":{"docs":{},"f":{"docs":{},"b":{"0":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},"f":{"7":{"docs":{},"f":{"7":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}}},"docs":{}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007099391480730223}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842}}},"9":{"5":{"9":{"docs":{},"a":{"1":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005070993914807302}}},"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}},".":{"0":{"docs":{},".":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"2":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"3":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"4":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"5":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"6":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"7":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"8":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"a":{"5":{"docs":{},"b":{"docs":{},"f":{"1":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}}},"docs":{},"b":{"7":{"docs":{},"d":{"4":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}}}},"1":{"0":{"0":{"5":{"1":{"docs":{},"c":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007099391480730223}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007099391480730223}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005070993914807302}}},"4":{"9":{"docs":{},"c":{"1":{"docs":{},"a":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}}},"docs":{}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.15384615384615385},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"2":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"a":{"docs":{},"f":{"7":{"0":{"5":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}},"docs":{}}},"d":{"1":{"5":{"docs":{},"b":{"docs":{},"b":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}}},"docs":{}},"docs":{}}},"2":{"0":{"1":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.02028397565922921}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"a":{"docs":{},"f":{"5":{"2":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"f":{"docs":{},"c":{"6":{"docs":{},"e":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},"c":{"docs":{},"f":{"docs":{},"e":{"5":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"a":{"4":{"docs":{},"b":{"1":{"0":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"3":{"0":{"0":{"docs":{},"a":{"docs":{},"c":{"1":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"4":{"3":{"4":{"2":{"docs":{},"a":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"docs":{}},"docs":{}},"docs":{}},"6":{"3":{"3":{"0":{"4":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"c":{"docs":{},"e":{"5":{"0":{"8":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}},"docs":{}}}},"4":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"b":{"2":{"0":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"docs":{}},"docs":{}},"c":{"5":{"9":{"docs":{},"b":{"0":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}},"6":{"6":{"5":{"docs":{},"d":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"d":{"docs":{},"a":{"9":{"3":{"8":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}},"docs":{}}}},"5":{"0":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}},"1":{"4":{"8":{"5":{"1":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"0":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"docs":{}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"b":{"docs":{},"e":{"6":{"docs":{},"b":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}}}},"5":{"7":{"1":{"0":{"6":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"0":{"7":{"8":{"docs":{},"e":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842}},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"d":{"6":{"docs":{},"a":{"5":{"7":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"f":{"7":{"docs":{},"f":{"4":{"6":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"6":{"0":{"docs":{},"c":{"2":{"docs":{},"e":{"0":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"d":{"docs":{},"c":{"8":{"4":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}}}},"9":{"7":{"docs":{},"c":{"5":{"2":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"overview.html":{"ref":"overview.html","tf":0.07692307692307693}}},"7":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{},"d":{"5":{"docs":{},"a":{"0":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"4":{"4":{"2":{"4":{"docs":{},"b":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{},"c":{"docs":{},"e":{"1":{"2":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{},"b":{"1":{"2":{"8":{"0":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"8":{"0":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"1":{"docs":{},"f":{"docs":{},"e":{"0":{"docs":{},"b":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}}}},"2":{"0":{"6":{"1":{"2":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"e":{"6":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"5":{"8":{"docs":{},"b":{"3":{"docs":{},"f":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"e":{"3":{"docs":{},"f":{"1":{"0":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"9":{"2":{"3":{"6":{"docs":{},"e":{"0":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"2":{"3":{"5":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"docs":{},"a":{"5":{"docs":{},"c":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}}},"5":{"5":{"7":{"docs":{},"c":{"0":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}}},"docs":{}},"9":{"7":{"9":{"8":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"docs":{},"d":{"2":{"docs":{},"f":{"6":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"c":{"7":{"6":{"docs":{},"a":{"docs":{},"a":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"docs":{}},"docs":{}},"f":{"9":{"docs":{},"c":{"5":{"4":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"a":{"0":{"3":{"2":{"3":{"docs":{},"e":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"docs":{}},"5":{"6":{"1":{"5":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"4":{"docs":{},"f":{"9":{"docs":{},"e":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}}},"docs":{}},"8":{"docs":{},"e":{"5":{"docs":{},"c":{"docs":{},"d":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}}},"docs":{}}},"docs":{},"d":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.006085192697768763},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{"index.html":{"ref":"index.html","tf":0.03067484662576687},"changelog.html":{"ref":"changelog.html","tf":0.016227180527383367}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"y":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.018404907975460124},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"a":{"1":{"6":{"9":{"docs":{},"c":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"f":{"7":{"docs":{},"a":{"docs":{},"b":{"docs":{},"f":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}}}},"docs":{}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"o":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"b":{"7":{"7":{"docs":{},"c":{"9":{"docs":{},"f":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"docs":{}}},"docs":{}},"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004893964110929853},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.1643835616438356},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.03636363636363636},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0547945205479452},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0065252854812398045},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.007226738934056007},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":5.0181818181818185},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.007590132827324478},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.007518796992481203},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.007366482504604052},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.07017543859649122}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"8":{"7":{"docs":{},"e":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}},"e":{"5":{"docs":{},"d":{"7":{"2":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"u":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"f":{"4":{"9":{"7":{"docs":{},"d":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007099391480730223}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.14285714285714285}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}},"u":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.02636916835699797}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}},"c":{"4":{"5":{"1":{"9":{"docs":{},"a":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"6":{"0":{"docs":{},"b":{"3":{"docs":{},"f":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"6":{"docs":{},"b":{"docs":{},"e":{"5":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":5.002710027100271},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.030425963488843813}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.022838499184339316},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.029850746268656716},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.025293586269196026},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.026565464895635674},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.02913533834586466},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.02578268876611418},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.020391517128874388},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.022388059701492536},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.022583559168925023},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.023719165085388995},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.02631578947368421},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.02302025782688766},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}}}}}}}},"o":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}}}}}}}}},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.01957585644371941},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.02168021680216802},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.022770398481973434},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.022556390977443608},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.022099447513812154}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}},"p":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.04081632653061224}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"i":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.006323396567299007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":5.007590132827325},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.006578947368421052},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.006445672191528545}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.00897226753670473},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.00993676603432701},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.010436432637571158},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.010338345864661654},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.010128913443830571}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"!":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.013050570962479609},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.014453477868112014},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.015180265654648957},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.015037593984962405},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.014732965009208104}},"e":{"docs":{},"!":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.011156186612576065},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.010603588907014683},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.00993676603432701},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.010436432637571158},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.010338345864661654},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.010128913443830571},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0065252854812398045},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}},"b":{"docs":{},"e":{"0":{"8":{"8":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}},"docs":{}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.016227180527383367}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":3.333333333333333}}}}}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}},"d":{"5":{"docs":{},"b":{"1":{"8":{"docs":{},"c":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"docs":{}},"docs":{}},"e":{"docs":{},"a":{"7":{"5":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}}}},"6":{"6":{"4":{"0":{"3":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.05555555555555555}}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.024539877300613498},"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}}}}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.024539877300613498}}}}}}},"d":{"docs":{},"c":{"3":{"docs":{},"b":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"docs":{}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0065252854812398045},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.07339449541284404}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027522935779816515}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.009787928221859706},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.005420054200542005},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.07272727272727272},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0547945205479452},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.006445672191528545},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06896551724137931}}}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"changelog.html":{"ref":"changelog.html","tf":0.007099391480730223},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":5.002446982055465},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":5.018656716417911},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"f":{"docs":{},"f":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018404907975460124},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.006323396567299007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.006641366223908918},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.006578947368421052},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.006445672191528545}}}}}}}},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.007099391480730223},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}},"o":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}},"e":{"7":{"2":{"2":{"docs":{},"a":{"8":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.03067484662576687},"changelog.html":{"ref":"changelog.html","tf":0.02129817444219067},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.00897226753670473},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.026119402985074626},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.005420054200542005},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.005639097744360902},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0055248618784530384},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"u":{"docs":{},"m":{"docs":{},"d":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}},".":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"u":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}}},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"]":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.016227180527383367},"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.033442088091353996},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.022388059701492536},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.025293586269196026},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.026565464895635674},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.02913533834586466},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.02578268876611418},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.07017543859649122}},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}},"s":{"docs":{},":":{"8":{"docs":{"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}}},"9":{"docs":{"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}}},"docs":{}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}},"docs":{}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.08333333333333333},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}}}},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"b":{"3":{"1":{"4":{"docs":{},"f":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"docs":{}},"docs":{}},"docs":{}},"d":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005070993914807302},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.02202283849918434},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.03731343283582089},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.01987353206865402},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.020872865275142316},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":5.041095890410959},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.020676691729323307},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.020257826887661142},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.14035087719298245},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.02586206896551724}},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"[":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},".":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}},"f":{"2":{"4":{"docs":{},"a":{"7":{"4":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"3":{"docs":{},"f":{"docs":{},"e":{"1":{"2":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"docs":{}},"docs":{}}}},"4":{"4":{"0":{"docs":{},"c":{"8":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"l":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"license.html":{"ref":"license.html","tf":0.01020408163265306},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"(":{"docs":{},"(":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"f":{"docs":{},"o":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.029411764705882353},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004893964110929853},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"a":{"7":{"3":{"3":{"4":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"l":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004893964110929853},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"e":{"4":{"9":{"1":{"1":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013184584178498986}}}}}}},"f":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{},"c":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"docs":{}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.675287356321839}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.03636363636363636},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"9":{"2":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"m":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005070993914807302},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}},"s":{"docs":{},":":{"1":{"1":{"1":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}},"docs":{}},"docs":{}},"3":{"1":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}},"6":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}},"docs":{}},"5":{"8":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.006323396567299007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.006641366223908918},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.006578947368421052},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.006445672191528545}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}},"u":{"docs":{},"p":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.03669724770642202}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.03067484662576687},"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.08333333333333333},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.013866231647634585},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.015356820234869015},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.016129032258064516},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.015977443609022556},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.01565377532228361},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.04294478527607362}}},"n":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005070993914807302}}}}}},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":5.0181818181818185},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":5.002846299810247},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":5.027397260273973},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":5.00281954887218},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":5.002762430939226},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":5.035087719298246}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}},"e":{"docs":{},"[":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.008156606851549755},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.007226738934056007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.007590132827324478},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.007518796992481203},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.007366482504604052}}}}}},"e":{"1":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"docs":{}},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}},"docs":{}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}}},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}}}}}}}}}},"y":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"license.html":{"ref":"license.html","tf":3.343537414965986}}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005070993914807302}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}},"n":{"docs":{},"e":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}},"k":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.005420054200542005},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.03636363636363636},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0547945205479452},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.005639097744360902},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"w":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"overview.html":{"ref":"overview.html","tf":0.15384615384615385},"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":0.2857142857142857},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.05555555555555555},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.01818181818181818},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0273972602739726},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01834862385321101}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"docs":{}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"k":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}},"(":{"docs":{},"(":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"license.html":{"ref":"license.html","tf":0.02040816326530612}}},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.3419540229885056},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.3425076452599387}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"modules.html":{"ref":"modules.html","tf":10.142857142857142},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":5.027777777777778}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749}}}},"u":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006085192697768763},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.008156606851549755},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}},"e":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.005639097744360902},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}},"x":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027522935779816515}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006085192697768763}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.018404907975460124}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017}}}}}}}},"n":{"docs":{},"g":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.05555555555555555}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.007226738934056007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.013184584178498986}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.049079754601226995}}}},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}},"e":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.008156606851549755},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.009033423667570008},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.009487666034155597},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.009208103130755065}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},".":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}},"e":{"docs":{},"[":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.01468189233278956},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.03731343283582089},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.015356820234869015},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.21818181818181817},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.019924098671726755},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.1643835616438356},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.019736842105263157},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.01565377532228361},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.08620689655172414},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01834862385321101}}}}}},"l":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06896551724137931}}}}},"s":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"x":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06896551724137931}}}}}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842}}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"license.html":{"ref":"license.html","tf":0.01020408163265306}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007099391480730223},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004893964110929853},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.076923076923077}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0065252854812398045},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.013050570962479609},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.01987353206865402},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.015180265654648957},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.015037593984962405},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.014732965009208104}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"'":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.006323396567299007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.006641366223908918},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.006578947368421052},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.006445672191528545}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"l":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":5.0018796992481205},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004893964110929853},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":5.007226738934056},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.005639097744360902},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0055248618784530384}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"u":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"j":{"docs":{},"o":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},".":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.01818181818181818},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0273972602739726},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561}}}}}},"a":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004893964110929853},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.026119402985074626},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.005420054200542005},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.005639097744360902},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0055248618784530384}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06896551724137931}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"c":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0065252854812398045},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.012646793134598013},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.007590132827324478},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.007518796992481203},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.007366482504604052}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.00734094616639478},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.008130081300813009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.008538899430740038},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.008458646616541353},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.008287292817679558}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"a":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"p":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"index.html":{"ref":"index.html","tf":0.049079754601226995},"changelog.html":{"ref":"changelog.html","tf":0.05172413793103448},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.026916802610114192},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.026119402985074626},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.017163504968383016},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.018026565464895637},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.017857142857142856},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.017495395948434623},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.11009174311926606}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"modules.html":{"ref":"modules.html","tf":0.14285714285714285},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":5.055555555555555}}}}}}},".":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"u":{"docs":{},"m":{"docs":{},"d":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.1388888888888889},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":5.00163132137031},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.00734094616639478},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.005420054200542005},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.005639097744360902},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0055248618784530384},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":5.035087719298246}}},"d":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"e":{"docs":{},"s":{"docs":{},"]":{"docs":{},"=":{"docs":{},"{":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.009787928221859706},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.008130081300813009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.008538899430740038},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.008458646616541353},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":5.009208103130755},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01834862385321101}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006085192697768763}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.1388888888888889},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":5.007462686567164}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027522935779816515}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027522935779816515}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027522935779816515}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027522935779816515}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027522935779816515}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027522935779816515}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"overview.html":{"ref":"overview.html","tf":0.15384615384615385},"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":0.2857142857142857},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.05555555555555555},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.01818181818181818},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0273972602739726},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01834862385321101}}}}},"e":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.07017543859649122}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}}},"1":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}}},"2":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}}},"docs":{}},"5":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}}},"6":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}}},"7":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}}},"8":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}}},"9":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909}}},"docs":{}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"e":{"docs":{},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010141987829614604}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.005420054200542005},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}},"e":{"docs":{},"r":{"2":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.007226738934056007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}},"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.006323396567299007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.006641366223908918},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.006578947368421052},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.006445672191528545}}}}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"z":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.01957585644371941},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.02168021680216802},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.021821631878557873},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.021616541353383457},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.02117863720073665}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.03680981595092025},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"c":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"docs":{}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.03636363636363636},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0547945205479452},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}}},"x":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007099391480730223}},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749}}}}}},"a":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004893964110929853},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.00909090909090909},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.017543859649122806}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09183673469387756}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.3456032719836397},"changelog.html":{"ref":"changelog.html","tf":3.3363759296822173},"license.html":{"ref":"license.html","tf":3.333333333333333}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004893964110929853},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.005420054200542005},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.005639097744360902},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0055248618784530384},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"t":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"i":{"docs":{},"c":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749},"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.00734094616639478},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.008130081300813009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.008538899430740038},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.008458646616541353},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.019337016574585635},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.11009174311926606}}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.03636363636363636},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.03636363636363636},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}},"o":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.006323396567299007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.006641366223908918},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.006578947368421052},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.006445672191528545}},".":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005070993914807302}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.018656716417910446}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/ResizableModule.html":{"ref":"modules/ResizableModule.html","tf":0.027777777777777776}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}},"s":{"docs":{},":":{"2":{"0":{"3":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"4":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"5":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"6":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"7":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"8":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}},"docs":{}},"8":{"1":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"6":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"docs":{}},"9":{"1":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"8":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"docs":{}},"docs":{}},"3":{"0":{"3":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"8":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"docs":{"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503}}},"1":{"3":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"8":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"docs":{"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503}}},"2":{"3":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"8":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756}}},"docs":{"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503}}},"6":{"docs":{"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598}}},"7":{"docs":{"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598}}},"docs":{}},"7":{"7":{"6":{"docs":{"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009}}},"8":{"docs":{"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009}}},"docs":{}},"8":{"0":{"docs":{"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009}}},"4":{"docs":{"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009}}},"docs":{}},"9":{"5":{"docs":{"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.08181818181818182}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863}},"s":{"docs":{},":":{"5":{"docs":{"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863}}},"6":{"docs":{"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863}}},"7":{"docs":{"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863}}},"8":{"docs":{"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863}}},"docs":{}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}},"k":{"docs":{},"e":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.03067484662576687}},":":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.006323396567299007},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.006641366223908918},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.006578947368421052},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.006445672191528545}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}},"u":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.00897226753670473},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.00993676603432701},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.010436432637571158},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.010338345864661654},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.010128913443830571}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"x":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.014925373134328358},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.006578947368421052},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}},"x":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"d":{"docs":{},"o":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.005420054200542005},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.03636363636363636},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0547945205479452},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.005639097744360902},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}}},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009174311926605505}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},".":{"docs":{},"*":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\\":{"docs":{},"(":{"docs":{},"(":{"docs":{},".":{"docs":{},"*":{"docs":{},")":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}}},"y":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0136986301369863}}}}}}},"u":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.009787928221859706},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.008130081300813009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.008538899430740038},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.008458646616541353},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.008287292817679558}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.008156606851549755},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.004516711833785004},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.07272727272727272},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/Edges.html":{"ref":"interfaces/Edges.html","tf":0.0547945205479452},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0055248618784530384},"interfaces/ResizeEvent.html":{"ref":"interfaces/ResizeEvent.html","tf":0.03508771929824561},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06896551724137931},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.07339449541284404}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.08620689655172414}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.018404907975460124},"changelog.html":{"ref":"changelog.html","tf":0.010141987829614604},"license.html":{"ref":"license.html","tf":0.02040816326530612},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.007462686567164179},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005070993914807302}}}}},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"m":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}}}},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}},"u":{"docs":{},"p":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.034482758620689655}}}}}}}},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004056795131845842}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.012269938650306749}}}},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.008156606851549755},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.026119402985074626},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.009033423667570008},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.009487666034155597},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.009208103130755065}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0030425963488843813}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065}}}}}}}}}},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.005709624796084829},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.0037313432835820895},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.07339449541284404}},"e":{"1":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0008156606851549756},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0009033423667570009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0009487666034155598},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0009398496240601503},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0009208103130755065},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008620689655172414}}},"2":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0016313213703099511},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0018066847335140017},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0018975332068311196},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0018796992481203006},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.001841620626151013},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.017241379310344827}}},"docs":{}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.675840978593271}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}}}}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374},"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0032626427406199023},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0036133694670280035},"interfaces/BoundingRectangle.html":{"ref":"interfaces/BoundingRectangle.html","tf":0.03636363636363636},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.003795066413662239},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.0037593984962406013},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.003683241252302026}}}}},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.006134969325153374}}}}},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}}}},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"e":{"docs":{},"b":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"j":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"y":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0010141987829614604}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002028397565922921},"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.004078303425774877},"directives/ResizeHandleDirective.html":{"ref":"directives/ResizeHandleDirective.html","tf":0.011194029850746268},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.008130081300813009},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.004743833017077799},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.004699248120300752},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.004604051565377533}},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0028462998102466793},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"directives/ResizableDirective.html":{"ref":"directives/ResizableDirective.html","tf":0.0024469820554649264},"classes/PointerEventListeners.html":{"ref":"classes/PointerEventListeners.html","tf":0.0027100271002710027},"interfaces/Coordinate.html":{"ref":"interfaces/Coordinate.html","tf":0.0056925996204933585},"interfaces/PointerEventCoordinate.html":{"ref":"interfaces/PointerEventCoordinate.html","tf":0.002819548872180451},"interfaces/ResizeCursors.html":{"ref":"interfaces/ResizeCursors.html","tf":0.0027624309392265192}}}},"length":2913},"corpusTokens":["0","0.0.1","0.0.2","0.0.3","0.1.0","0.2.0","0.2.1","0.3.0","0.3.1","0.3.2","0.3.3","0.4.0","0.4.1","0.5.0","0.5.1","0.5.2","0.5.3","0.5.4","0.5.5","0.5.6","0.5.7","0.6.0","0.6.1","0.7.0","0.7.2","0.8.0","0.8.1","01","02","03","032ea5a","04","0440bbd","05","053fb0e","05f7f7e","06","07","08","09","0959a12","0a5bf11","0ab7d40","1","1.0.0","1.1.0","1.1.1","1.1.2","1.2.0","1.2.1","1.2.2","1.2.3","1.2.4","1.2.5","10","10051cd","10px","11","12","13","149c1a4","15","16","19","1af705a","1d15bb4","2","2.0.0","20","2016","2017","21","22","22af52f","23","23fc6e5","24","25","25cfe50","26","27","28","29","2a4b102","3","30","300ac10","31","33","34342aa","36","3633040","39","3ce508d","4","4.0","40","41","4b20cde","4c59b05","4c665d2","4da938d","5","5.0","5.5","50","514851f","520abc","53","54","54be6b7","5571069","59078e2","5d6a576","5f7f468","6","60c2e08","62","65","66","68","68dc84f","697c52c","70","71d5a05","72","74424ba","75ce122","79","7b1280e","8","80","8000","81fe0b4","820612e","8232e66","858b3f8","8e3f108","9","9236e02","927235e","93a5c4","9557c0a","9597986","99d2f66","9c76aac","9f9c54a","a0323e9","a056154","a74f9e2","a8e5cd3","aa169c7","abov","absolut","action","activ","add","af7abf7","allow","allowededg","amount","and/or","angular","angular/cor","angular2","any).eventlisteners[typ","aot","app","appli","applic","argument","aris","associ","author","auto","b77c9fc","bac87e3","back","be","be5d727","befor","before(resize)=\"onresize($ev","begin","begun","behaviour","between","bf497d2","boolean","bootstrap","border","bottom","bottomleft","bottomright","bound","boundingrect","boundingrect.bottom","boundingrect.height","boundingrect.left","boundingrect.right","boundingrect.top","boundingrect.width","boundingrectangl","box","break","broken","brows","browser","bug","build","bundl","c","c4519a1","c60b3f5","c76be59","call","camel","cancel","case","cbe088f","chang","changelog","charg","claim","class","clienti","clientrect","clientx","clone","clonednod","close","co","come","commit","compat","compil","complet","compon","con","condit","config","configur","connect","console.log('el","const","constructor","constructor(render","contain","content","continu","contract","coord","coordin","copi","copyright","core","corner","correct","creat","css","cssclass","current","currentrect","currentres","currentresize!.currentrect","currentresize!.edg","currentresize!.startingrect","currentresize)).subscrib","currentresize.clonednod","currentresize.clonednode!.scrollleft","currentresize.clonednode!.scrolltop","currentresize.edg","currentresize.edges.bottom","currentresize.edges.left","currentresize.edges.right","currentresize.edges.top","currentresize.startingrect","currentresize.startingrect.height}px","currentresize.startingrect.left}px","currentresize.startingrect.top}px","currentresize.startingrect.width}px","cursor","cursorprecis","customis","d5b18cc","d5ea756","d664038","damag","dash","deal","declar","dedc3bb","default","default_resize_cursor","defin","delet","demo","depend","descript","destroy","dev","develop","diff","direct","directori","disabl","disableres","dist","distribut","document","dont","drag","draghandl","drop","dynam","e.g","e722a86","each","eb314fd","edg","edges.interfac","edgesdiff","edgesdiff[edg","edit","effect","element","element.j","element.nativeelement.getboundingclientrect","element.nativeelement.offsetheight","element.nativeelement.offsetleft","element.nativeelement.offsettop","element.nativeelement.offsetwidth","element.nativeelement.scrollleft","element.nativeelement.scrolltop","element.umd.j","element/bundles/angular","element/demo","element/dist/umd/angular","element/doc","elementref","elementthen","elm","enabl","enableghostres","enableresizestyl","enableresizestyling]=\"tru","ensur","entri","environ","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.edg","event.interfac","event.interface.t","event.interface.ts:8","event.interface.ts:9","event.preventdefault","event.targettouches[0].clienti","event.targettouches[0].clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlisten","ew","exampl","export","expos","express","f24a746","f3fe12a","f440c87","fa73345","fals","fanci","fe49114","featur","ffad2ca","file","filter","filter(([previouscoord","filter((edg","filter((newboundingrect","find","find(valu","fire","firefox","fit","fix","flesh","flicker","folder","follow","free","function","furnish","gener","get","getdiff(movecoord","getdiff(newcoord","getdiff(previouscoord","getedgesdiff","getedgesdiff(undefin","getelementrect","getelementrect(el","getgrid","getgrid(newcoord","getinst","getinstance(render","getnewboundingrectangl","getnewboundingrectangle(startingrect","getresizecursor","getresizecursor(currentresize.edg","getresizecursor(edg","getresizecursor(resizeedg","getresizeedg","getresizeedges(undefin","getsnapgrid","ghost","ghostelementposit","give","global","grant","grid","guidelin","handl","handle.direct","handle.directive.t","handle.directive.ts:111","handle.directive.ts:31","handle.directive.ts:36","handle.directive.ts:58","handler","height","here","herebi","hidden","higher","holder","host","hostlisten","hostlistener('mousedown","hostlistener('mouseup","hostlistener('touchcancel","hostlistener('touchend","hostlistener('touchstart","hover","html","htmlelement","https://mattlewis92.github.io/angular","ie11","implement","impli","import","improv","includ","index","info","inherit","initi","initialrectangl","initialrectangle[edg","input","insid","instal","instanc","instead","interfac","interfaces/bound","interfaces/edges.interfac","interfaces/res","interv","interval(mouse_move_throttle_m","isnumbercloseto","isnumbercloseto(value1","iswithinboundingi","iswithinboundingx","iswithinboundingx(undefin","iswithinboundingy(undefin","js","keep","kind","last","left","leftorright","lettabl","lewi","liabil","liabl","librari","licens","limit","line","listen","local","lock","log","longer","main","make","map","map(([previouscoord","match","math.abs(value1","math.ceil(coords.clienti","math.ceil(coords.clientx","math.round(newcoords.clienti","math.round(newcoords.clientx","matt","merchant","merg","mergemap","mergemap(startcoord","metadata","method","miscellan","miss","mit","modifi","modul","more","mous","mouse_move_throttle_m","mousedown","mousedrag","mouseev","mousemov","mousemove.pipe(filt","mousemove.pipe(pairwis","mousemove.pipe(take(1)).pipe(map(coord","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","movecoords.clienti","movecoords.clientx","multipl","mwl","mwlresiz","mwlresizehandl","mycompon","mymodul","name","ne","need","nest","new","newboundingrect","newboundingrect.height","newboundingrect.height}px","newboundingrect.left}px","newboundingrect.top}px","newboundingrect.width","newboundingrect.width}px","newcoord","newgrid","newgrid.i","newgrid.x","newrectangl","newrectangle[edg","ng","ng4","ngmodul","ngondestroy","ngoninit","ngzone","node","node.j","node_modules/angular","node_modules/angular2","noninfring","notabl","notic","now","npm","ns","null","number","nw","object","object.assign","object.freez","object.keys(edges).length","object.keys(this.eventlisteners).foreach","observ","observable.merge'","observer.next","obtain","offlin","old","onc","ondestroy","oninit","onmousedown","onmousemov","onmouseup(clientx","onres","onresizeend","onresizeend(ev","onresizestart","oper","opt","option","ordin","otherwis","out","output","outsid","over","overview","packag","packagr","pairwis","paramet","parent","particular","pass","path","peer","peerdepend","perform","permiss","permit","person","pipe","pipe(filt","pipe(shar","pipe(takeuntil(merge(this.mouseup","pipe(throttl","place","point","pointerdown","pointereventcoordin","pointereventlisten","pointereventlisteners.getinst","pointereventlisteners.inst","pointereventlistenersubscript","pointermov","pointerup","pojo","port","portion","posit","post","precis","prefix","prepar","press","prevent","previou","previouscoord","previousgrid","previousgrid.i","previousgrid.x","privat","project","propag","properti","prototyp","provid","public","publish","purpos","px","rc5","rc6","re","readm","rect","rect.left","rect.top","rectangl","rectangle.interfac","rectangle.interface.t","rectangle.interface.ts:10","rectangle.interface.ts:11","rectangle.interface.ts:12","rectangle.interface.ts:5","rectangle.interface.ts:6","rectangle.interface.ts:7","rectangle.interface.ts:8","rectangle.interface.ts:9","refer","regist","relax","releas","releaselicens","reload","remov","removeghostel","renam","render","renderer.listen","renderer2","repo","requir","reset","resiz","resizable.direct","resizable.j","resizable.jsaft","resizable/angular2","resizable/dist/umd/angular2","resizabledirect","resizablemodul","resize_active_class","resize_bottom_hover_class","resize_ghost_element_class","resize_left_hover_class","resize_right_hover_class","resize_top_hover_class","resizecursor","resizecursorprecis","resizeedg","resizeedges.bottom","resizeedges.left","resizeedges.right","resizeedges.top","resizeedges]={top","resizeend","resizeev","resizehandl","resizehandledirect","resizesnapgrid","resizestart","resizing)=\"onresizing($ev","restrict","result","return","reziz","right","run","rxj","rxjs/observ","rxjs/observable/interv","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takeuntil","rxjs/operators/throttl","rxjs/subject","save","scroll","scrollleft","scrolltop","se","seamless","see","select","selector","sell","server","set","setelementclass(elm","shall","share","show","shown","size","snap","snapgrid","snapgrid.i","snapgrid.x","softwar","sourc","specifi","src/interfaces/bound","src/interfaces/edges.interface.t","src/interfaces/edges.interface.ts:5","src/interfaces/edges.interface.ts:6","src/interfaces/edges.interface.ts:7","src/interfaces/edges.interface.ts:8","src/interfaces/res","src/resiz","src/resizable.directive.t","src/resizable.directive.ts:203","src/resizable.directive.ts:204","src/resizable.directive.ts:205","src/resizable.directive.ts:206","src/resizable.directive.ts:207","src/resizable.directive.ts:208","src/resizable.directive.ts:281","src/resizable.directive.ts:286","src/resizable.directive.ts:291","src/resizable.directive.ts:298","src/resizable.directive.ts:30","src/resizable.directive.ts:303","src/resizable.directive.ts:308","src/resizable.directive.ts:31","src/resizable.directive.ts:313","src/resizable.directive.ts:318","src/resizable.directive.ts:32","src/resizable.directive.ts:323","src/resizable.directive.ts:328","src/resizable.directive.ts:36","src/resizable.directive.ts:37","src/resizable.directive.ts:776","src/resizable.directive.ts:778","src/resizable.directive.ts:780","src/resizable.directive.ts:784","src/resizable.directive.ts:795","src/resizable.module.t","standard","start","startcoords.clienti","startcoords.clientx","startingrect","state","static","string","style","style[properti","subject","sublicens","subscrib","subscribe((edg","subscribe((newboundingrect","substanti","suffix","support","sw","sync","system.j","tabl","take","takeuntil","templat","temporari","test","test:watch","text","thick","this.element.nativeel","this.elm","this.elm.nativeel","this.elm.nativeelement.clonenode(tru","this.elm.nativeelement.parentelement.appendchild","this.elm.nativeelement.parentelement.removechild","this.enableghostres","this.eventlisteners.mousemov","this.eventlisteners.touchmov","this.eventlisteners[typ","this.ghostelementposit","this.mousedown","this.mousedown.complet","this.mousedown.next","this.mousemove.complet","this.mousemove.next","this.mousemove.pipe(shar","this.mouseup.complet","this.mouseup.next","this.mouseup.subscrib","this.onmousemov","this.pointerdown","this.pointereventlisten","this.pointereventlisteners.pointerdown.subscrib","this.pointereventlisteners.pointermove.subscrib","this.pointereventlisteners.pointerup.subscrib","this.pointereventlistenersubscriptions.pointerdown","this.pointereventlistenersubscriptions.pointerdown.unsubscrib","this.pointereventlistenersubscriptions.pointermov","this.pointereventlistenersubscriptions.pointermove.unsubscrib","this.pointereventlistenersubscriptions.pointerup","this.pointereventlistenersubscriptions.pointerup.unsubscrib","this.pointermov","this.pointerup","this.renderer.addclass","this.renderer.addclass(elm.nativeel","this.renderer.listen","this.renderer.removeclass(elm.nativeel","this.renderer.removeclass(this.elm.nativeel","this.renderer.setstyl","this.renderer.setstyle(document.bodi","this.renderer.setstyle(this.elm.nativeel","this.resizable.mousedown.next","this.resizable.mousemove.next","this.resizable.mouseup.next","this.resizecursor","this.resizecursorprecis","this.resizeedg","this.resizeend.emit","this.resizesnapgrid.bottom","this.resizesnapgrid.left","this.resizesnapgrid.right","this.resizesnapgrid.top","this.resizestart.emit","this.resizing.emit","this.setelementclass","this.setelementclass(this.elm","this.unsubscribeeventlisten","this.validateres","this.zone.run","this.zone.runoutsideangular","throttl","through","time","todo","top","topleft","toporbottom","topright","tort","touch","touchcancel","touchend","touchend(clientx","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","touchstart(ev","transform","transform.includes('transl","transform.replace(/.*translate\\((.*)px","translatex","translatey","trigger","true","tslint:dis","type","typerefer","typescript","ui","umd","uncancel","undefin","univers","unsubscrib","unsubscribeeventlisten","unsubscribemousedown","unsubscribemousemov","unsubscribemouseup","unsubscribetouchcancel","unsubscribetouchend","unsubscribetouchmov","unsubscribetouchstart","up","updat","upgrad","us","user","valid","validateres","valu","value1","value2","variabl","version","via","view","visibl","void","w","warn","warranti","way","webkit","whether","width","wip","within","without","work","x","y","yourself","zone","zone.runoutsideangular"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular resizable element\n\n\n\n\n\n\n\nDemo\nhttps://mattlewis92.github.io/angular-resizable-element/demo/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nAn angular 5.0+ directive that allows an element to be dragged and resized\nInstallation\nInstall through npm:\nnpm install --save angular-resizable-elementThen use it in your app like so:\nimport { Component } from '@angular/core';\nimport { ResizeEvent } from 'angular-resizable-element';\n\n@Component({\n  selector: 'demo-app',\n  // you should add some more styles to the element. See the demo folder for a more fleshed out example\n  styles: [`\n    mwlResizable {\n      box-sizing: border-box; // required for the enableGhostResize option to work\n    }\n  `],\n  template: `\n    \n    \n  `\n})\nexport class MyComponent {\n\n  onResizeEnd(event: ResizeEvent): void {\n    console.log('Element was resized', event);\n  }\n\n}\n\n// now use within your apps module\nimport { NgModule } from '@angular/core';\nimport { ResizableModule } from 'angular-resizable-element';\n\n@NgModule({\n  declarations: [MyComponent],\n  imports: [ResizableModule],\n  bootstrap: [MyComponent]\n})\nclass MyModule {}You may also find it useful to view the demo source.\nDocumentation\nAll documentation is auto-generated from the source and can be viewed here:\nhttps://mattlewis92.github.io/angular-resizable-element/docs/\nDevelopment\nPrepare your environment\n\nInstall Node.js and NPM (should come with)\nInstall local dev dependencies: npm install while current directory is this repo\n\nDevelopment server\nRun npm start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun npm test to run tests once or npm run test:watch to continually run tests.\nRelease\nnpm run releaseLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n2.0.0 (2017-12-26)\nFeatures\n\nexport directives with Directive suffix (0440bbd)\nupgrade to angular 5 (5d6a576)\nuse lettable rxjs operators (af7abf7)\nuse ng-packagr for bundling the package (c4519a1), closes #79 #80\n\nBREAKING CHANGES\n\nthe global observable prototype is now no longer modified by this package, you must\nimport rxjs operators yourself. Also rxjs 5.5 or higher is now required to use this library\nThe UMD entry point has changed from angular-resizable-element/dist/umd/angular-resizable-element.js to angular-resizable-element/bundles/angular-resizable-element.umd.js\n\nSystem.js users will need to update their configs\n\nangular 5 or higher is now required to use this package\nThe Resizable import is now ResizableDirective and ResizeHandle is now\nResizeHandleDirective\n\n\n1.2.5 (2017-12-26)\nBug Fixes\n\nresizeHandle: allow handles to be dynamically shown (34342aa), closes #68\nresize elements that have css transforms (f24a746), closes #72\nset the resize cursor globally when resizing (71d5a05), closes #70\n\n\n1.2.4 (2017-10-21)\nBug Fixes\n\nallow angular 5 peer dependency (25cfe50)\n\n\n1.2.3 (2017-09-28)\nBug Fixes\n\nAdd startingRect scroll position to cloned node. (#66) (a056154)\n\n\n1.2.2 (2017-08-28)\nBug Fixes\n\nensure mouse event handlers are triggers outside of the angular zone (23fc6e5), closes #65\n\n\n1.2.1 (2017-08-06)\nBug Fixes\n\ncursor: change the cursor back to default on IE11 (a0323e9), closes #62\n\n\n1.2.0 (2017-06-12)\nFeatures\n\nexport Edges and BoundingRectangle interfaces for use within applications (10051cd)\n\n\n1.1.2 (2017-06-10)\nBug Fixes\n\ndragHandle: fix drag handles on firefox (1d15bb4), closes #54\n\n\n1.1.1 (2017-05-21)\nBug Fixes\n\nset ghost element width and height on resize start (be5d727), closes #53\n\n\n1.1.0 (2017-05-12)\nFeatures\n\nadd a class to the ghost element (54be6b7)\n\n\n1.0.0 (2017-03-24)\nFeatures\n\nng4: upgrade to angular 4 (4c665d2)\n\nBREAKING CHANGES\n\nng4: angular 4.0 or higher is now required to use this library. The\nupgrade should be seamless\nfor most users.\n\n\n0.8.1 (2017-03-23)\nPerformance Improvements\n\nthrottle mousemove listener events (05f7f7e)\nuse shared mouse event listeners across all resizable instances (2a4b102)\n\n\n0.8.0 (2017-03-16)\nFeatures\n\nghostElementPositioning: allow ghost element positioning to be configured (b77c9fc)\nexpose Resizable and ResizeHandle directives (3633040)\n\n\n0.7.2 (2017-03-04)\nBug Fixes\n\nrelax peer dependency warning to allow angular 4 (8232e66)\n\nPerformance Improvements\n\nrun all rezize events outside the angular zone (820612e)\nresizable: only register mouse move events when a rezize is active (a74f9e2)\nresizeHandle: dynamically register mouse move event listener (4b20cde)\n\n\n0.7.0 (2017-02-28)\nFeatures\n\ncssClasses: Gives classes to main element depend on state (8e3f108)\ncursorPrecision: allow cursor precision value to be edited (3ce508d)\n\n\n0.6.1 (2017-02-11)\nBug Fixes\n\nuniversal: remove MouseEvent reference (520abce), closes #41\n\n\n0.6.0 (2017-02-04)\nFeatures\n\nresizeCursors: allow resize cursors to be customised (99d2f66), closes #40\n\n\n0.5.7 (2017-01-30)\nBug Fixes\n\nuse correct touch event properties (0ab7d40), closes #39\n\n\n0.5.6 (2017-01-25)\nBug Fixes\n\nelement should resize on touch events (aa169c7), closes #36\n\n\n0.5.5 (2017-01-11)\nBug Fixes\n\nadd width and height to cloned node (75ce122), closes #31\nkeep cursor while resizing (93a5c4e), closes #33\n\n\n0.5.4 (2016-12-11)\nBug Fixes\n\ncursor: reset the cursor instead of changing it to auto (514851f)\n\n\n0.5.3 (2016-11-19)\nBug Fixes\n\nunsubscribe all observables when the component is destroyed (d5ea756), closes #27\n\n\n0.5.2 (2016-11-05)\nBug Fixes\n\naot: aot compatibility (9236e02)\n\n\n0.5.1 (2016-11-03)\nBug Fixes\n\ndont change the cursor when resizing an element (697c52c), closes #24\n\n\n0.5.0 (2016-10-29)\nBug Fixes\n\nfix resizing via a drag handle (5f7f468)\nprevent text from being selected when resizing an element (5571069), closes #22\n\nFeatures\n\nrename the library from angular2-resizable to angular-resizable-element (927235e), closes #21\nrename the resize output to resizing (9597986), closes #20\n\nBREAKING CHANGES\n\nThe library has been renamed to angular-resizable-element.\n\nThe UMD entry point has changed to\nnode_modules/angular-resizable-element/dist/umd/angular-resizable-element.js\nBefore(resize)=\"onResize($event)\"\n\nAfter:\n(resizing)=\"onResizing($event)\"\n0.4.1 (2016-09-28)\nBug Fixes\n\ntypings: dont include reference to core-js (68dc84f)\n\n\n0.4.0 (2016-09-25)\nFeatures\n\nbuild: support offline template compilation (f3fe12a)\n\nBREAKING CHANGES\n\nbuild: For System.js users the path to the UMD files has changed:\n\nBefore:\nnode_modules/angular2-resizable/angular2-resizable.jsAfter:\nnode_modules/angular2-resizable/dist/umd/angular2-resizable.js\n0.3.3 (2016-09-13)\nBug Fixes\n\npeerDependencies: allow any versions of angular post RC5 (cbe088f)\n\n\n0.3.2 (2016-09-03)\nFeatures\n\nangular: support RC6 (d5b18cc)\n\n\n0.3.1 (2016-08-25)\nBug Fixes\n\nrxjs: use correct rxjs operator imports in dist (858b3f8), closes #16\n\n\n0.3.0 (2016-08-12)\nFeatures\n\nevents: rename all outputs to drop the on prefix (9c76aac)\ndirective selectors are now camel case instead of dash case (ffad2ca)\nupgrade to angular RC5 (9557c0a)\n\nBREAKING CHANGES\n\nmwl-resizable is now mwlResizable and mwl-resize-handle is now mwlResizeHandle\nAngular RC5 is now required\n\nThe Resizable and ResizeHandle directives are now no longer exported. Instead you must use the ResizableModule. See the readme or the demo app for an example of how to do this.\n\nevents: The onResizeStart output has been renamed to resizeStart\n\nThe onResize output has been renamed to resize\nThe onResizeEnd output has been renamed to resizeEnd\n\n0.2.1 (2016-07-15)\nBug Fixes\n\ndemo: fix broken demo (0a5bf11)\n\n\n0.2.0 (2016-07-15)\nBug Fixes\n\ncreate a clone of the ghost element instead of applying styling to the host (fa73345), closes #15\nonly resize when the cursor is within the bounding rectangle (dedc3bb)\n\nBREAKING CHANGES\n\nenableResizeStyling has been renamed to enableGhostResize\n\n\n0.1.0 (2016-06-26)\nBug Fixes\n\nmousedrag: cancel the previous mousedrag observable when starting a new drag (149c1a4), closes #9\nonResizeEnd: call with co-ordinates of last valid resize rather than where the mouse up event w (eb314fd)\nonResizeStart: ensure the starting rectangle is a POJO rather than a bounding rectangle (81fe0b4)\ncancel mousedrag event when either a mouseup or mousedown event fires (c76be59)\ndisable dragging effects on resizable elements on webkit browsers (59078e2)\nrenamed directive selector from mwl-resizeable to mwl-resizable (c60b3f5)\n\nFeatures\n\ndisableResize: support completely disabling resizing an element (9f9c54a), closes #13\nexpose the amount each edge was resized on resize events (d664038), closes #11\nenableResizeStyling: make temporary resizing of the element opt-in by default so users can con (4c59b05), closes #5\nresizeEdges: allow the resize edges to be customised (60c2e08), closes #8\nresizeHandles: add support for nesting resize handles inside the element (1af705a), closes #10\nresizeSnapGrid: allow resizing to fit to a snap grid (74424ba), closes #3\nvalidate: provide a way for resize events to be validated (4da938d), closes #12\n\nBREAKING CHANGES\n\nenableResizeStyling: the element will no longer have its styles changed by default when dragging and\nresizing. You can now re-enable it by setting [enableResizeStyling]=\"true\" on the element.\nthe $event.edges object values now contain numbers instead of booleans\n\nrename the directive from mwl-resizeable to mwl-resizable\n\n\nresizeEdges: by default the element is no longer resizable.\n\nYou must specify [resizeEdges]={top: true, bottom: true, left: true, right: true} to get the old behaviour back\n\n0.0.3 (2016-06-13)\nBug Fixes\n\nimport missing rxjs operators (300ac10)\n\n\n0.0.2 (2016-06-13)\nBug Fixes\n\ntypes: export Edges and BoundingRectangle types (fe49114)\ndont bundle rxjs with the library (7b1280e)\n\n\n0.0.1 (2016-06-13)\nBug Fixes\n\nallow the element to be resized multiple times (bf497d2)\ndrag: disable user dragging (053fb0e)\nreset element styles on mousedown if there was a previous uncancelled resize (a8e5cd3)\noutputs: make outputs sync to prevent ui flicker (032ea5a)\ntypescript: add missing types (e722a86)\n\nFeatures\n\nimprove transforms, add resize events (0959a12)\ninitial WIP resizable implementation (22af52f)\nshow the cursor when mousing over the edge of the element (f440c87)\nsupport resizing from corners (bac87e3), closes #4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2016 Matt Lewis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        ResizableModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResizableModule.html":{"url":"modules/ResizableModule.html","title":"module - ResizableModule","body":"\n                   \n\n\n\n\n  Modules\n  ResizableModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resizable.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResizableDirective\n                            \n                            \n                                ResizeHandleDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResizableDirective\n                            \n                            \n                                    ResizeHandleDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { ResizeHandleDirective } from './resize-handle.directive';\n\n@NgModule({\n  declarations: [ResizableDirective, ResizeHandleDirective],\n  exports: [ResizableDirective, ResizeHandleDirective]\n})\nexport class ResizableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResizableDirective.html":{"url":"directives/ResizableDirective.html","title":"directive - ResizableDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResizableDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/resizable.directive.ts\n        \n\n            \n                Description\n            \n            \n                Place this on an element to make it resizable. For example:\n\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [mwlResizable]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        enableGhostResize\n                                    \n                                    \n                                        ghostElementPositioning\n                                    \n                                    \n                                        resizeCursorPrecision\n                                    \n                                    \n                                        resizeCursors\n                                    \n                                    \n                                        resizeEdges\n                                    \n                                    \n                                        resizeSnapGrid\n                                    \n                                    \n                                        validateResize\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resizeEnd\n                                    \n                                    \n                                        resizeStart\n                                    \n                                    \n                                        resizing\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    enableGhostResize\n                                \n                                \n                                    Set to true to enable a temporary resizing effect of the element in between the resizeStart and resizeEnd events.\n\n                                      \n                                        Type:    boolean\n\n                                      \n                                    \n                                      Default value: false\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:291\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    ghostElementPositioning\n                                \n                                \n                                    Define the positioning of the ghost element (can be fixed or absolute)\n\n                                      \n                                        Type:    \"fixed\" | \"absolute\"\n\n                                      \n                                    \n                                      Default value: 'fixed'\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:313\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resizeCursorPrecision\n                                \n                                \n                                    Mouse over thickness to active cursor.\n\n                                      \n                                        Type:    number\n\n                                      \n                                    \n                                      Default value: 3\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:308\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resizeCursors\n                                \n                                \n                                    The mouse cursors that will be set on the resize edges\n\n                                      \n                                        Type:    ResizeCursors\n\n                                      \n                                    \n                                      Default value: DEFAULT_RESIZE_CURSORS\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:303\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resizeEdges\n                                \n                                \n                                    The edges that an element can be resized from. Pass an object like {top: true, bottom: false}. By default no edges can be resized.\n\n                                      \n                                        Type:    Edges\n\n                                      \n                                    \n                                      Default value: {}\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:286\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resizeSnapGrid\n                                \n                                \n                                    A snap grid that resize events will be locked to.\ne.g. to only allow the element to be resized every 10px set it to {left: 10, right: 10}\n\n                                      \n                                        Type:    Edges\n\n                                      \n                                    \n                                      Default value: {}\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:298\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    validateResize\n                                \n                                \n                                    A function that will be called before each resize event. Return true to allow the resize event to propagate or false to cancel it\n\n                                      \n                                        Type:    function\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:281\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    resizeEnd\n                                \n                                \n                                    Called after the mouse is released after a resize event. $event is a ResizeEvent object.\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:328\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resizeStart\n                                \n                                \n                                    Called when the mouse is pressed and a resize event is about to begin. $event is a ResizeEvent object.\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:318\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resizing\n                                \n                                \n                                    Called as the mouse is dragged after a resize event has begun. $event is a ResizeEvent object.\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:323\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { merge } from 'rxjs/observable/merge';\nimport { interval } from 'rxjs/observable/interval';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { filter } from 'rxjs/operators/filter';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { take } from 'rxjs/operators/take';\nimport { throttle } from 'rxjs/operators/throttle';\nimport { share } from 'rxjs/operators/share';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff  style[property])\n    .find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom:\n        element.nativeElement.offsetHeight +\n        element.nativeElement.offsetTop -\n        translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right:\n        element.nativeElement.offsetWidth +\n        element.nativeElement.offsetLeft -\n        translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY = rect.left && clientX  {\n    edgesDiff[edge] = newRectangle[edge] - initialRectangle[edge];\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * \n * \n * ```\n */\n@Directive({\n  selector: '[mwlResizable]'\n})\nexport class ResizableDirective implements OnInit, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n  @Input() validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   */\n  @Input() resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n  @Input() enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n  @Input() resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n  @Input() resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   */\n  @Input() resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n  @Input() ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeStart = new EventEmitter();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizing = new EventEmitter();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private pointerEventListenerSubscriptions: any = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    // TODO - use some fancy Observable.merge's for this\n    this.pointerEventListenerSubscriptions.pointerDown = this.pointerEventListeners.pointerDown.subscribe(\n      ({ clientX, clientY }) => {\n        this.mousedown.next({ clientX, clientY });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerMove = this.pointerEventListeners.pointerMove.subscribe(\n      ({ clientX, clientY, event }) => {\n        this.mousemove.next({ clientX, clientY, event });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerUp = this.pointerEventListeners.pointerUp.subscribe(\n      ({ clientX, clientY }) => {\n        this.mouseup.next({ clientX, clientY });\n      }\n    );\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const mouseMove: Observable = this.mousemove.pipe(share());\n\n    mouseMove.pipe(filter(() => !!currentResize)).subscribe(({ event }) => {\n      event.preventDefault();\n    });\n\n    mouseMove\n      .pipe(throttle(() => interval(MOUSE_MOVE_THROTTLE_MS)))\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors: ResizeCursors = Object.assign(\n          {},\n          DEFAULT_RESIZE_CURSORS,\n          this.resizeCursors\n        );\n        if (currentResize) {\n          const cursor: string = getResizeCursor(\n            currentResize.edges,\n            resizeCursors\n          );\n          this.renderer.setStyle(document.body, 'cursor', cursor);\n        } else {\n          const cursor: string = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, !!currentResize);\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable = this.mousedown\n      .pipe(\n        mergeMap(startCoords => {\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\n            return {\n              clientX: moveCoords.clientX - startCoords.clientX,\n              clientY: moveCoords.clientY - startCoords.clientY\n            };\n          }\n\n          const getSnapGrid = () => {\n            const snapGrid: Coordinate = { x: 1, y: 1 };\n\n            if (currentResize) {\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                snapGrid.x = +this.resizeSnapGrid.left;\n              } else if (\n                this.resizeSnapGrid.right &&\n                currentResize.edges.right\n              ) {\n                snapGrid.x = +this.resizeSnapGrid.right;\n              }\n\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                snapGrid.y = +this.resizeSnapGrid.top;\n              } else if (\n                this.resizeSnapGrid.bottom &&\n                currentResize.edges.bottom\n              ) {\n                snapGrid.y = +this.resizeSnapGrid.bottom;\n              }\n            }\n\n            return snapGrid;\n          };\n\n          function getGrid(\n            coords: { clientX: number; clientY: number },\n            snapGrid: Coordinate\n          ) {\n            return {\n              x: Math.ceil(coords.clientX / snapGrid.x),\n              y: Math.ceil(coords.clientY / snapGrid.y)\n            };\n          }\n\n          return merge(\n            mouseMove.pipe(take(1)).pipe(map(coords => [, coords])),\n            mouseMove.pipe(pairwise())\n          )\n            .pipe(\n              map(([previousCoords, newCoords]) => {\n                return [\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\n                  getDiff(newCoords)\n                ];\n              })\n            )\n            .pipe(\n              filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                  return true;\n                }\n\n                const snapGrid: Coordinate = getSnapGrid();\n                const previousGrid: Coordinate = getGrid(\n                  previousCoords,\n                  snapGrid\n                );\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n                return (\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\n                );\n              })\n            )\n            .pipe(\n              map(([, newCoords]) => {\n                const snapGrid: Coordinate = getSnapGrid();\n                return {\n                  clientX:\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                  clientY:\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n              })\n            )\n            .pipe(takeUntil(merge(this.mouseup, this.mousedown)));\n        })\n      )\n      .pipe(filter(() => !!currentResize));\n\n    mousedrag\n      .pipe(\n        map(({ clientX, clientY }) => {\n          return getNewBoundingRectangle(\n            currentResize!.startingRect,\n            currentResize!.edges,\n            clientX,\n            clientY\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return !!(\n            newBoundingRect.height &&\n            newBoundingRect.width &&\n            newBoundingRect.height > 0 &&\n            newBoundingRect.width > 0\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return this.validateResize\n            ? this.validateResize({\n                rectangle: newBoundingRect,\n                edges: getEdgesDiff({\n                  edges: currentResize!.edges,\n                  initialRectangle: currentResize!.startingRect,\n                  newRectangle: newBoundingRect\n                })\n              })\n            : true;\n        })\n      )\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    this.mousedown\n      .pipe(\n        map(({ clientX, clientY, edges }) => {\n          return (\n            edges ||\n            getResizeEdges({\n              clientX,\n              clientY,\n              elm: this.elm,\n              allowedEdges: this.resizeEdges,\n              cursorPrecision: this.resizeCursorPrecision\n            })\n          );\n        })\n      )\n      .pipe(\n        filter((edges: Edges) => {\n          return Object.keys(edges).length > 0;\n        })\n      )\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          const resizeCursors: ResizeCursors = Object.assign(\n            {},\n            DEFAULT_RESIZE_CURSORS,\n            this.resizeCursors\n          );\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    this.mouseup.subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.pointerEventListenerSubscriptions.pointerDown.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerMove.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerUp.unsubscribe();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable;\n\n  public pointerMove: Observable;\n\n  public pointerUp: Observable;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerMove = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerUp = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).pipe(share());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResizeHandleDirective.html":{"url":"directives/ResizeHandleDirective.html","title":"directive - ResizeHandleDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResizeHandleDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/resize-handle.directive.ts\n        \n\n            \n                Description\n            \n            \n                An element placed inside a mwlResizable directive to be used as a drag and resize handle\nFor example\n\n   \n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [mwlResizeHandle]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resizeEdges\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        touchend\n                                    \n                                    \n                                        touchstart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(renderer: Renderer2, element: ElementRef, zone: NgZone, resizable: ResizableDirective)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/resize-handle.directive.ts:36\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              renderer\n                                                              \n                                                                        Renderer2\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              element\n                                                              \n                                                                        ElementRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              zone\n                                                              \n                                                                        NgZone\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              resizable\n                                                              \n                                                                        ResizableDirective\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resizeEdges\n                                \n                                \n                                    The Edges object that contains the edges of the parent element that dragging the handle will trigger a resize on\n\n                                      \n                                        Type:    Edges\n\n                                      \n                                    \n                                      Default value: {}\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/resize-handle.directive.ts:31\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        touchend\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event.changedTouches[0].clientX' '$event.changedTouches[0].clientY' \n                                    \n                                \n                            \n                                \n            touchend(clientX: number, clientY: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/resize-handle.directive.ts:111\n                                        \n                                    \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        touchstart\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' '$event.touches[0].clientX' '$event.touches[0].clientY' \n                                    \n                                \n                            \n                                \n            touchstart(event: MouseEvent | TouchEvent, clientX: number, clientY: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/resize-handle.directive.ts:58\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Input,\n  HostListener,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { Edges } from './interfaces/edges.interface';\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * \n *   \n * \n * ```\n */\n@Directive({\n  selector: '[mwlResizeHandle]'\n})\nexport class ResizeHandleDirective implements OnDestroy {\n  /**\n   * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n   */\n  @Input() resizeEdges: Edges = {};\n\n  private eventListeners: {\n    touchmove?: () => void;\n    mousemove?: () => void;\n  } = {};\n\n  constructor(\n    private renderer: Renderer2,\n    private element: ElementRef,\n    private zone: NgZone,\n    private resizable: ResizableDirective\n  ) {}\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n  }\n\n  /**\n   * @hidden\n   */\n  @HostListener('touchstart', [\n    '$event',\n    '$event.touches[0].clientX',\n    '$event.touches[0].clientY'\n  ])\n  @HostListener('mousedown', ['$event', '$event.clientX', '$event.clientY'])\n  onMousedown(\n    event: MouseEvent | TouchEvent,\n    clientX: number,\n    clientY: number\n  ): void {\n    event.preventDefault();\n    this.zone.runOutsideAngular(() => {\n      if (!this.eventListeners.touchmove) {\n        this.eventListeners.touchmove = this.renderer.listen(\n          this.element.nativeElement,\n          'touchmove',\n          (touchMoveEvent: TouchEvent) => {\n            this.onMousemove(\n              touchMoveEvent,\n              touchMoveEvent.targetTouches[0].clientX,\n              touchMoveEvent.targetTouches[0].clientY\n            );\n          }\n        );\n      }\n      if (!this.eventListeners.mousemove) {\n        this.eventListeners.mousemove = this.renderer.listen(\n          this.element.nativeElement,\n          'mousemove',\n          (mouseMoveEvent: MouseEvent) => {\n            this.onMousemove(\n              mouseMoveEvent,\n              mouseMoveEvent.clientX,\n              mouseMoveEvent.clientY\n            );\n          }\n        );\n      }\n      this.resizable.mousedown.next({\n        clientX,\n        clientY,\n        edges: this.resizeEdges\n      });\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  @HostListener('touchend', [\n    '$event.changedTouches[0].clientX',\n    '$event.changedTouches[0].clientY'\n  ])\n  @HostListener('touchcancel', [\n    '$event.changedTouches[0].clientX',\n    '$event.changedTouches[0].clientY'\n  ])\n  @HostListener('mouseup', ['$event.clientX', '$event.clientY'])\n  onMouseup(clientX: number, clientY: number): void {\n    this.zone.runOutsideAngular(() => {\n      this.unsubscribeEventListeners();\n      this.resizable.mouseup.next({\n        clientX,\n        clientY,\n        edges: this.resizeEdges\n      });\n    });\n  }\n\n  private onMousemove(\n    event: MouseEvent | TouchEvent,\n    clientX: number,\n    clientY: number\n  ): void {\n    this.resizable.mousemove.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges,\n      event\n    });\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListeners).forEach(\n      (type: 'touchmove' | 'mousemove') => {\n        (this as any).eventListeners[type]();\n        delete this.eventListeners[type];\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PointerEventListeners.html":{"url":"classes/PointerEventListeners.html","title":"class - PointerEventListeners","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PointerEventListeners\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/resizable.directive.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        pointerDown\n                                    \n                                    \n                                            Public\n                                        pointerMove\n                                    \n                                    \n                                            Public\n                                        pointerUp\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(renderer: Renderer2, zone: NgZone)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:795\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              renderer\n                                                              \n                                                                        Renderer2\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              zone\n                                                              \n                                                                        NgZone\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getInstance(renderer: Renderer2, zone: NgZone)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:784\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              renderer\n                                                              \n                                                                      Renderer2\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              zone\n                                                              \n                                                                      NgZone\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     PointerEventListeners\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        pointerDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    pointerDown:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:776\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        pointerMove\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    pointerMove:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:778\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        pointerUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    pointerUp:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:780\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { merge } from 'rxjs/observable/merge';\nimport { interval } from 'rxjs/observable/interval';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { filter } from 'rxjs/operators/filter';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { take } from 'rxjs/operators/take';\nimport { throttle } from 'rxjs/operators/throttle';\nimport { share } from 'rxjs/operators/share';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff  style[property])\n    .find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom:\n        element.nativeElement.offsetHeight +\n        element.nativeElement.offsetTop -\n        translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right:\n        element.nativeElement.offsetWidth +\n        element.nativeElement.offsetLeft -\n        translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY = rect.left && clientX  {\n    edgesDiff[edge] = newRectangle[edge] - initialRectangle[edge];\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * \n * \n * ```\n */\n@Directive({\n  selector: '[mwlResizable]'\n})\nexport class ResizableDirective implements OnInit, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n  @Input() validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   */\n  @Input() resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n  @Input() enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n  @Input() resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n  @Input() resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   */\n  @Input() resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n  @Input() ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeStart = new EventEmitter();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizing = new EventEmitter();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private pointerEventListenerSubscriptions: any = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    // TODO - use some fancy Observable.merge's for this\n    this.pointerEventListenerSubscriptions.pointerDown = this.pointerEventListeners.pointerDown.subscribe(\n      ({ clientX, clientY }) => {\n        this.mousedown.next({ clientX, clientY });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerMove = this.pointerEventListeners.pointerMove.subscribe(\n      ({ clientX, clientY, event }) => {\n        this.mousemove.next({ clientX, clientY, event });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerUp = this.pointerEventListeners.pointerUp.subscribe(\n      ({ clientX, clientY }) => {\n        this.mouseup.next({ clientX, clientY });\n      }\n    );\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const mouseMove: Observable = this.mousemove.pipe(share());\n\n    mouseMove.pipe(filter(() => !!currentResize)).subscribe(({ event }) => {\n      event.preventDefault();\n    });\n\n    mouseMove\n      .pipe(throttle(() => interval(MOUSE_MOVE_THROTTLE_MS)))\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors: ResizeCursors = Object.assign(\n          {},\n          DEFAULT_RESIZE_CURSORS,\n          this.resizeCursors\n        );\n        if (currentResize) {\n          const cursor: string = getResizeCursor(\n            currentResize.edges,\n            resizeCursors\n          );\n          this.renderer.setStyle(document.body, 'cursor', cursor);\n        } else {\n          const cursor: string = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, !!currentResize);\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable = this.mousedown\n      .pipe(\n        mergeMap(startCoords => {\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\n            return {\n              clientX: moveCoords.clientX - startCoords.clientX,\n              clientY: moveCoords.clientY - startCoords.clientY\n            };\n          }\n\n          const getSnapGrid = () => {\n            const snapGrid: Coordinate = { x: 1, y: 1 };\n\n            if (currentResize) {\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                snapGrid.x = +this.resizeSnapGrid.left;\n              } else if (\n                this.resizeSnapGrid.right &&\n                currentResize.edges.right\n              ) {\n                snapGrid.x = +this.resizeSnapGrid.right;\n              }\n\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                snapGrid.y = +this.resizeSnapGrid.top;\n              } else if (\n                this.resizeSnapGrid.bottom &&\n                currentResize.edges.bottom\n              ) {\n                snapGrid.y = +this.resizeSnapGrid.bottom;\n              }\n            }\n\n            return snapGrid;\n          };\n\n          function getGrid(\n            coords: { clientX: number; clientY: number },\n            snapGrid: Coordinate\n          ) {\n            return {\n              x: Math.ceil(coords.clientX / snapGrid.x),\n              y: Math.ceil(coords.clientY / snapGrid.y)\n            };\n          }\n\n          return merge(\n            mouseMove.pipe(take(1)).pipe(map(coords => [, coords])),\n            mouseMove.pipe(pairwise())\n          )\n            .pipe(\n              map(([previousCoords, newCoords]) => {\n                return [\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\n                  getDiff(newCoords)\n                ];\n              })\n            )\n            .pipe(\n              filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                  return true;\n                }\n\n                const snapGrid: Coordinate = getSnapGrid();\n                const previousGrid: Coordinate = getGrid(\n                  previousCoords,\n                  snapGrid\n                );\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n                return (\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\n                );\n              })\n            )\n            .pipe(\n              map(([, newCoords]) => {\n                const snapGrid: Coordinate = getSnapGrid();\n                return {\n                  clientX:\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                  clientY:\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n              })\n            )\n            .pipe(takeUntil(merge(this.mouseup, this.mousedown)));\n        })\n      )\n      .pipe(filter(() => !!currentResize));\n\n    mousedrag\n      .pipe(\n        map(({ clientX, clientY }) => {\n          return getNewBoundingRectangle(\n            currentResize!.startingRect,\n            currentResize!.edges,\n            clientX,\n            clientY\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return !!(\n            newBoundingRect.height &&\n            newBoundingRect.width &&\n            newBoundingRect.height > 0 &&\n            newBoundingRect.width > 0\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return this.validateResize\n            ? this.validateResize({\n                rectangle: newBoundingRect,\n                edges: getEdgesDiff({\n                  edges: currentResize!.edges,\n                  initialRectangle: currentResize!.startingRect,\n                  newRectangle: newBoundingRect\n                })\n              })\n            : true;\n        })\n      )\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    this.mousedown\n      .pipe(\n        map(({ clientX, clientY, edges }) => {\n          return (\n            edges ||\n            getResizeEdges({\n              clientX,\n              clientY,\n              elm: this.elm,\n              allowedEdges: this.resizeEdges,\n              cursorPrecision: this.resizeCursorPrecision\n            })\n          );\n        })\n      )\n      .pipe(\n        filter((edges: Edges) => {\n          return Object.keys(edges).length > 0;\n        })\n      )\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          const resizeCursors: ResizeCursors = Object.assign(\n            {},\n            DEFAULT_RESIZE_CURSORS,\n            this.resizeCursors\n          );\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    this.mouseup.subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.pointerEventListenerSubscriptions.pointerDown.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerMove.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerUp.unsubscribe();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable;\n\n  public pointerMove: Observable;\n\n  public pointerUp: Observable;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerMove = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerUp = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).pipe(share());\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BoundingRectangle.html":{"url":"interfaces/BoundingRectangle.html","title":"interface - BoundingRectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BoundingRectangle\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/bounding-rectangle.interface.ts\n        \n\n            \n                Description\n            \n            \n                The bounding rectangle of the resized element\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        height\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        scrollLeft\n                                \n                                \n                                        scrollTop\n                                \n                                \n                                        top\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/bounding-rectangle.interface.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/bounding-rectangle.interface.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/bounding-rectangle.interface.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/bounding-rectangle.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollLeft\n                                    \n                                \n                                \n                                    \n                                        scrollLeft:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/bounding-rectangle.interface.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollTop\n                                    \n                                \n                                \n                                    \n                                        scrollTop:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/bounding-rectangle.interface.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/bounding-rectangle.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/bounding-rectangle.interface.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface BoundingRectangle {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  height?: number;\n  width?: number;\n  scrollTop?: number;\n  scrollLeft?: number;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Coordinate.html":{"url":"interfaces/Coordinate.html","title":"interface - Coordinate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Coordinate\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/resizable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:36\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:37\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { merge } from 'rxjs/observable/merge';\nimport { interval } from 'rxjs/observable/interval';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { filter } from 'rxjs/operators/filter';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { take } from 'rxjs/operators/take';\nimport { throttle } from 'rxjs/operators/throttle';\nimport { share } from 'rxjs/operators/share';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff  style[property])\n    .find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom:\n        element.nativeElement.offsetHeight +\n        element.nativeElement.offsetTop -\n        translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right:\n        element.nativeElement.offsetWidth +\n        element.nativeElement.offsetLeft -\n        translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY = rect.left && clientX  {\n    edgesDiff[edge] = newRectangle[edge] - initialRectangle[edge];\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * \n * \n * ```\n */\n@Directive({\n  selector: '[mwlResizable]'\n})\nexport class ResizableDirective implements OnInit, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n  @Input() validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   */\n  @Input() resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n  @Input() enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n  @Input() resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n  @Input() resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   */\n  @Input() resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n  @Input() ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeStart = new EventEmitter();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizing = new EventEmitter();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private pointerEventListenerSubscriptions: any = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    // TODO - use some fancy Observable.merge's for this\n    this.pointerEventListenerSubscriptions.pointerDown = this.pointerEventListeners.pointerDown.subscribe(\n      ({ clientX, clientY }) => {\n        this.mousedown.next({ clientX, clientY });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerMove = this.pointerEventListeners.pointerMove.subscribe(\n      ({ clientX, clientY, event }) => {\n        this.mousemove.next({ clientX, clientY, event });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerUp = this.pointerEventListeners.pointerUp.subscribe(\n      ({ clientX, clientY }) => {\n        this.mouseup.next({ clientX, clientY });\n      }\n    );\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const mouseMove: Observable = this.mousemove.pipe(share());\n\n    mouseMove.pipe(filter(() => !!currentResize)).subscribe(({ event }) => {\n      event.preventDefault();\n    });\n\n    mouseMove\n      .pipe(throttle(() => interval(MOUSE_MOVE_THROTTLE_MS)))\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors: ResizeCursors = Object.assign(\n          {},\n          DEFAULT_RESIZE_CURSORS,\n          this.resizeCursors\n        );\n        if (currentResize) {\n          const cursor: string = getResizeCursor(\n            currentResize.edges,\n            resizeCursors\n          );\n          this.renderer.setStyle(document.body, 'cursor', cursor);\n        } else {\n          const cursor: string = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, !!currentResize);\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable = this.mousedown\n      .pipe(\n        mergeMap(startCoords => {\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\n            return {\n              clientX: moveCoords.clientX - startCoords.clientX,\n              clientY: moveCoords.clientY - startCoords.clientY\n            };\n          }\n\n          const getSnapGrid = () => {\n            const snapGrid: Coordinate = { x: 1, y: 1 };\n\n            if (currentResize) {\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                snapGrid.x = +this.resizeSnapGrid.left;\n              } else if (\n                this.resizeSnapGrid.right &&\n                currentResize.edges.right\n              ) {\n                snapGrid.x = +this.resizeSnapGrid.right;\n              }\n\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                snapGrid.y = +this.resizeSnapGrid.top;\n              } else if (\n                this.resizeSnapGrid.bottom &&\n                currentResize.edges.bottom\n              ) {\n                snapGrid.y = +this.resizeSnapGrid.bottom;\n              }\n            }\n\n            return snapGrid;\n          };\n\n          function getGrid(\n            coords: { clientX: number; clientY: number },\n            snapGrid: Coordinate\n          ) {\n            return {\n              x: Math.ceil(coords.clientX / snapGrid.x),\n              y: Math.ceil(coords.clientY / snapGrid.y)\n            };\n          }\n\n          return merge(\n            mouseMove.pipe(take(1)).pipe(map(coords => [, coords])),\n            mouseMove.pipe(pairwise())\n          )\n            .pipe(\n              map(([previousCoords, newCoords]) => {\n                return [\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\n                  getDiff(newCoords)\n                ];\n              })\n            )\n            .pipe(\n              filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                  return true;\n                }\n\n                const snapGrid: Coordinate = getSnapGrid();\n                const previousGrid: Coordinate = getGrid(\n                  previousCoords,\n                  snapGrid\n                );\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n                return (\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\n                );\n              })\n            )\n            .pipe(\n              map(([, newCoords]) => {\n                const snapGrid: Coordinate = getSnapGrid();\n                return {\n                  clientX:\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                  clientY:\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n              })\n            )\n            .pipe(takeUntil(merge(this.mouseup, this.mousedown)));\n        })\n      )\n      .pipe(filter(() => !!currentResize));\n\n    mousedrag\n      .pipe(\n        map(({ clientX, clientY }) => {\n          return getNewBoundingRectangle(\n            currentResize!.startingRect,\n            currentResize!.edges,\n            clientX,\n            clientY\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return !!(\n            newBoundingRect.height &&\n            newBoundingRect.width &&\n            newBoundingRect.height > 0 &&\n            newBoundingRect.width > 0\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return this.validateResize\n            ? this.validateResize({\n                rectangle: newBoundingRect,\n                edges: getEdgesDiff({\n                  edges: currentResize!.edges,\n                  initialRectangle: currentResize!.startingRect,\n                  newRectangle: newBoundingRect\n                })\n              })\n            : true;\n        })\n      )\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    this.mousedown\n      .pipe(\n        map(({ clientX, clientY, edges }) => {\n          return (\n            edges ||\n            getResizeEdges({\n              clientX,\n              clientY,\n              elm: this.elm,\n              allowedEdges: this.resizeEdges,\n              cursorPrecision: this.resizeCursorPrecision\n            })\n          );\n        })\n      )\n      .pipe(\n        filter((edges: Edges) => {\n          return Object.keys(edges).length > 0;\n        })\n      )\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          const resizeCursors: ResizeCursors = Object.assign(\n            {},\n            DEFAULT_RESIZE_CURSORS,\n            this.resizeCursors\n          );\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    this.mouseup.subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.pointerEventListenerSubscriptions.pointerDown.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerMove.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerUp.unsubscribe();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable;\n\n  public pointerMove: Observable;\n\n  public pointerUp: Observable;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerMove = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerUp = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).pipe(share());\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Edges.html":{"url":"interfaces/Edges.html","title":"interface - Edges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Edges\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/edges.interface.ts\n        \n\n            \n                Description\n            \n            \n                The edges that the resize event were triggered on\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:     boolean | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/edges.interface.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:     boolean | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/edges.interface.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:     boolean | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/edges.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     boolean | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/edges.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Edges {\n  top?: boolean | number;\n  bottom?: boolean | number;\n  left?: boolean | number;\n  right?: boolean | number;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PointerEventCoordinate.html":{"url":"interfaces/PointerEventCoordinate.html","title":"interface - PointerEventCoordinate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PointerEventCoordinate\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/resizable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientX\n                                \n                                \n                                        clientY\n                                \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientX\n                                    \n                                \n                                \n                                    \n                                        clientX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:30\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientY\n                                    \n                                \n                                \n                                    \n                                        clientY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:31\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     MouseEvent | TouchEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent | TouchEvent\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:32\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { merge } from 'rxjs/observable/merge';\nimport { interval } from 'rxjs/observable/interval';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { filter } from 'rxjs/operators/filter';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { take } from 'rxjs/operators/take';\nimport { throttle } from 'rxjs/operators/throttle';\nimport { share } from 'rxjs/operators/share';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff  style[property])\n    .find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom:\n        element.nativeElement.offsetHeight +\n        element.nativeElement.offsetTop -\n        translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right:\n        element.nativeElement.offsetWidth +\n        element.nativeElement.offsetLeft -\n        translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY = rect.left && clientX  {\n    edgesDiff[edge] = newRectangle[edge] - initialRectangle[edge];\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * \n * \n * ```\n */\n@Directive({\n  selector: '[mwlResizable]'\n})\nexport class ResizableDirective implements OnInit, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n  @Input() validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   */\n  @Input() resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n  @Input() enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n  @Input() resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n  @Input() resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   */\n  @Input() resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n  @Input() ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeStart = new EventEmitter();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizing = new EventEmitter();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private pointerEventListenerSubscriptions: any = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    // TODO - use some fancy Observable.merge's for this\n    this.pointerEventListenerSubscriptions.pointerDown = this.pointerEventListeners.pointerDown.subscribe(\n      ({ clientX, clientY }) => {\n        this.mousedown.next({ clientX, clientY });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerMove = this.pointerEventListeners.pointerMove.subscribe(\n      ({ clientX, clientY, event }) => {\n        this.mousemove.next({ clientX, clientY, event });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerUp = this.pointerEventListeners.pointerUp.subscribe(\n      ({ clientX, clientY }) => {\n        this.mouseup.next({ clientX, clientY });\n      }\n    );\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const mouseMove: Observable = this.mousemove.pipe(share());\n\n    mouseMove.pipe(filter(() => !!currentResize)).subscribe(({ event }) => {\n      event.preventDefault();\n    });\n\n    mouseMove\n      .pipe(throttle(() => interval(MOUSE_MOVE_THROTTLE_MS)))\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors: ResizeCursors = Object.assign(\n          {},\n          DEFAULT_RESIZE_CURSORS,\n          this.resizeCursors\n        );\n        if (currentResize) {\n          const cursor: string = getResizeCursor(\n            currentResize.edges,\n            resizeCursors\n          );\n          this.renderer.setStyle(document.body, 'cursor', cursor);\n        } else {\n          const cursor: string = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, !!currentResize);\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable = this.mousedown\n      .pipe(\n        mergeMap(startCoords => {\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\n            return {\n              clientX: moveCoords.clientX - startCoords.clientX,\n              clientY: moveCoords.clientY - startCoords.clientY\n            };\n          }\n\n          const getSnapGrid = () => {\n            const snapGrid: Coordinate = { x: 1, y: 1 };\n\n            if (currentResize) {\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                snapGrid.x = +this.resizeSnapGrid.left;\n              } else if (\n                this.resizeSnapGrid.right &&\n                currentResize.edges.right\n              ) {\n                snapGrid.x = +this.resizeSnapGrid.right;\n              }\n\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                snapGrid.y = +this.resizeSnapGrid.top;\n              } else if (\n                this.resizeSnapGrid.bottom &&\n                currentResize.edges.bottom\n              ) {\n                snapGrid.y = +this.resizeSnapGrid.bottom;\n              }\n            }\n\n            return snapGrid;\n          };\n\n          function getGrid(\n            coords: { clientX: number; clientY: number },\n            snapGrid: Coordinate\n          ) {\n            return {\n              x: Math.ceil(coords.clientX / snapGrid.x),\n              y: Math.ceil(coords.clientY / snapGrid.y)\n            };\n          }\n\n          return merge(\n            mouseMove.pipe(take(1)).pipe(map(coords => [, coords])),\n            mouseMove.pipe(pairwise())\n          )\n            .pipe(\n              map(([previousCoords, newCoords]) => {\n                return [\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\n                  getDiff(newCoords)\n                ];\n              })\n            )\n            .pipe(\n              filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                  return true;\n                }\n\n                const snapGrid: Coordinate = getSnapGrid();\n                const previousGrid: Coordinate = getGrid(\n                  previousCoords,\n                  snapGrid\n                );\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n                return (\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\n                );\n              })\n            )\n            .pipe(\n              map(([, newCoords]) => {\n                const snapGrid: Coordinate = getSnapGrid();\n                return {\n                  clientX:\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                  clientY:\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n              })\n            )\n            .pipe(takeUntil(merge(this.mouseup, this.mousedown)));\n        })\n      )\n      .pipe(filter(() => !!currentResize));\n\n    mousedrag\n      .pipe(\n        map(({ clientX, clientY }) => {\n          return getNewBoundingRectangle(\n            currentResize!.startingRect,\n            currentResize!.edges,\n            clientX,\n            clientY\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return !!(\n            newBoundingRect.height &&\n            newBoundingRect.width &&\n            newBoundingRect.height > 0 &&\n            newBoundingRect.width > 0\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return this.validateResize\n            ? this.validateResize({\n                rectangle: newBoundingRect,\n                edges: getEdgesDiff({\n                  edges: currentResize!.edges,\n                  initialRectangle: currentResize!.startingRect,\n                  newRectangle: newBoundingRect\n                })\n              })\n            : true;\n        })\n      )\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    this.mousedown\n      .pipe(\n        map(({ clientX, clientY, edges }) => {\n          return (\n            edges ||\n            getResizeEdges({\n              clientX,\n              clientY,\n              elm: this.elm,\n              allowedEdges: this.resizeEdges,\n              cursorPrecision: this.resizeCursorPrecision\n            })\n          );\n        })\n      )\n      .pipe(\n        filter((edges: Edges) => {\n          return Object.keys(edges).length > 0;\n        })\n      )\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          const resizeCursors: ResizeCursors = Object.assign(\n            {},\n            DEFAULT_RESIZE_CURSORS,\n            this.resizeCursors\n          );\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    this.mouseup.subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.pointerEventListenerSubscriptions.pointerDown.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerMove.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerUp.unsubscribe();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable;\n\n  public pointerMove: Observable;\n\n  public pointerUp: Observable;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerMove = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerUp = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).pipe(share());\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResizeCursors.html":{"url":"interfaces/ResizeCursors.html","title":"interface - ResizeCursors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResizeCursors\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/resizable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottomLeft\n                                \n                                \n                                        bottomRight\n                                \n                                \n                                        leftOrRight\n                                \n                                \n                                        topLeft\n                                \n                                \n                                        topOrBottom\n                                \n                                \n                                        topRight\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottomLeft\n                                    \n                                \n                                \n                                    \n                                        bottomLeft:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:205\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bottomRight\n                                    \n                                \n                                \n                                    \n                                        bottomRight:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:206\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftOrRight\n                                    \n                                \n                                \n                                    \n                                        leftOrRight:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:207\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topLeft\n                                    \n                                \n                                \n                                    \n                                        topLeft:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:203\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topOrBottom\n                                    \n                                \n                                \n                                    \n                                        topOrBottom:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:208\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topRight\n                                    \n                                \n                                \n                                    \n                                        topRight:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/resizable.directive.ts:204\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { merge } from 'rxjs/observable/merge';\nimport { interval } from 'rxjs/observable/interval';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { filter } from 'rxjs/operators/filter';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { take } from 'rxjs/operators/take';\nimport { throttle } from 'rxjs/operators/throttle';\nimport { share } from 'rxjs/operators/share';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff  style[property])\n    .find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom:\n        element.nativeElement.offsetHeight +\n        element.nativeElement.offsetTop -\n        translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right:\n        element.nativeElement.offsetWidth +\n        element.nativeElement.offsetLeft -\n        translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY = rect.left && clientX  {\n    edgesDiff[edge] = newRectangle[edge] - initialRectangle[edge];\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * \n * \n * ```\n */\n@Directive({\n  selector: '[mwlResizable]'\n})\nexport class ResizableDirective implements OnInit, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n  @Input() validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   */\n  @Input() resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n  @Input() enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n  @Input() resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n  @Input() resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   */\n  @Input() resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n  @Input() ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeStart = new EventEmitter();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizing = new EventEmitter();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private pointerEventListenerSubscriptions: any = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    // TODO - use some fancy Observable.merge's for this\n    this.pointerEventListenerSubscriptions.pointerDown = this.pointerEventListeners.pointerDown.subscribe(\n      ({ clientX, clientY }) => {\n        this.mousedown.next({ clientX, clientY });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerMove = this.pointerEventListeners.pointerMove.subscribe(\n      ({ clientX, clientY, event }) => {\n        this.mousemove.next({ clientX, clientY, event });\n      }\n    );\n\n    this.pointerEventListenerSubscriptions.pointerUp = this.pointerEventListeners.pointerUp.subscribe(\n      ({ clientX, clientY }) => {\n        this.mouseup.next({ clientX, clientY });\n      }\n    );\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const mouseMove: Observable = this.mousemove.pipe(share());\n\n    mouseMove.pipe(filter(() => !!currentResize)).subscribe(({ event }) => {\n      event.preventDefault();\n    });\n\n    mouseMove\n      .pipe(throttle(() => interval(MOUSE_MOVE_THROTTLE_MS)))\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors: ResizeCursors = Object.assign(\n          {},\n          DEFAULT_RESIZE_CURSORS,\n          this.resizeCursors\n        );\n        if (currentResize) {\n          const cursor: string = getResizeCursor(\n            currentResize.edges,\n            resizeCursors\n          );\n          this.renderer.setStyle(document.body, 'cursor', cursor);\n        } else {\n          const cursor: string = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, !!currentResize);\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable = this.mousedown\n      .pipe(\n        mergeMap(startCoords => {\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\n            return {\n              clientX: moveCoords.clientX - startCoords.clientX,\n              clientY: moveCoords.clientY - startCoords.clientY\n            };\n          }\n\n          const getSnapGrid = () => {\n            const snapGrid: Coordinate = { x: 1, y: 1 };\n\n            if (currentResize) {\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                snapGrid.x = +this.resizeSnapGrid.left;\n              } else if (\n                this.resizeSnapGrid.right &&\n                currentResize.edges.right\n              ) {\n                snapGrid.x = +this.resizeSnapGrid.right;\n              }\n\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                snapGrid.y = +this.resizeSnapGrid.top;\n              } else if (\n                this.resizeSnapGrid.bottom &&\n                currentResize.edges.bottom\n              ) {\n                snapGrid.y = +this.resizeSnapGrid.bottom;\n              }\n            }\n\n            return snapGrid;\n          };\n\n          function getGrid(\n            coords: { clientX: number; clientY: number },\n            snapGrid: Coordinate\n          ) {\n            return {\n              x: Math.ceil(coords.clientX / snapGrid.x),\n              y: Math.ceil(coords.clientY / snapGrid.y)\n            };\n          }\n\n          return merge(\n            mouseMove.pipe(take(1)).pipe(map(coords => [, coords])),\n            mouseMove.pipe(pairwise())\n          )\n            .pipe(\n              map(([previousCoords, newCoords]) => {\n                return [\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\n                  getDiff(newCoords)\n                ];\n              })\n            )\n            .pipe(\n              filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                  return true;\n                }\n\n                const snapGrid: Coordinate = getSnapGrid();\n                const previousGrid: Coordinate = getGrid(\n                  previousCoords,\n                  snapGrid\n                );\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n                return (\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\n                );\n              })\n            )\n            .pipe(\n              map(([, newCoords]) => {\n                const snapGrid: Coordinate = getSnapGrid();\n                return {\n                  clientX:\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                  clientY:\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n              })\n            )\n            .pipe(takeUntil(merge(this.mouseup, this.mousedown)));\n        })\n      )\n      .pipe(filter(() => !!currentResize));\n\n    mousedrag\n      .pipe(\n        map(({ clientX, clientY }) => {\n          return getNewBoundingRectangle(\n            currentResize!.startingRect,\n            currentResize!.edges,\n            clientX,\n            clientY\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return !!(\n            newBoundingRect.height &&\n            newBoundingRect.width &&\n            newBoundingRect.height > 0 &&\n            newBoundingRect.width > 0\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return this.validateResize\n            ? this.validateResize({\n                rectangle: newBoundingRect,\n                edges: getEdgesDiff({\n                  edges: currentResize!.edges,\n                  initialRectangle: currentResize!.startingRect,\n                  newRectangle: newBoundingRect\n                })\n              })\n            : true;\n        })\n      )\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    this.mousedown\n      .pipe(\n        map(({ clientX, clientY, edges }) => {\n          return (\n            edges ||\n            getResizeEdges({\n              clientX,\n              clientY,\n              elm: this.elm,\n              allowedEdges: this.resizeEdges,\n              cursorPrecision: this.resizeCursorPrecision\n            })\n          );\n        })\n      )\n      .pipe(\n        filter((edges: Edges) => {\n          return Object.keys(edges).length > 0;\n        })\n      )\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          const resizeCursors: ResizeCursors = Object.assign(\n            {},\n            DEFAULT_RESIZE_CURSORS,\n            this.resizeCursors\n          );\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    this.mouseup.subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.pointerEventListenerSubscriptions.pointerDown.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerMove.unsubscribe();\n    this.pointerEventListenerSubscriptions.pointerUp.unsubscribe();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable;\n\n  public pointerMove: Observable;\n\n  public pointerUp: Observable;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerMove = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerUp = new Observable(\n      (observer: Observer) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).pipe(share());\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResizeEvent.html":{"url":"interfaces/ResizeEvent.html","title":"interface - ResizeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResizeEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/resize-event.interface.ts\n        \n\n            \n                Description\n            \n            \n                The $event object that is passed to the resize events\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        edges\n                                \n                                \n                                        rectangle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:     Edges\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Edges\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/resize-event.interface.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rectangle\n                                    \n                                \n                                \n                                    \n                                        rectangle:     BoundingRectangle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BoundingRectangle\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interfaces/resize-event.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { BoundingRectangle } from './bounding-rectangle.interface';\nimport { Edges } from './edges.interface';\n\n/**\n * The `$event` object that is passed to the resize events\n */\nexport interface ResizeEvent {\n  rectangle: BoundingRectangle;\n  edges: Edges;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getEdgesDiff\n                        \n                        \n                            getElementRect\n                        \n                        \n                            getNewBoundingRectangle\n                        \n                        \n                            getResizeCursor\n                        \n                        \n                            getResizeEdges\n                        \n                        \n                            isNumberCloseTo\n                        \n                        \n                            isWithinBoundingX\n                        \n                        \n                            isWithinBoundingY\n                        \n                    \n                \n            \n        \n    \n\n\n    src/resizable.directive.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                getEdgesDiff\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getEdgesDiff(undefined: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                getElementRect\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getElementRect(element: typeReference, ghostElementPositioning: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      element\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      ghostElementPositioning\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                getNewBoundingRectangle\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getNewBoundingRectangle(startingRect: typeReference, edges: typeReference, clientX: number, clientY: number)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      startingRect\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      edges\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      clientX\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      clientY\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                getResizeCursor\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getResizeCursor(edges: typeReference, cursors: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      edges\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      cursors\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                getResizeEdges\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getResizeEdges(undefined: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isNumberCloseTo\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    isNumberCloseTo(value1: number, value2: number, precision: number)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      value1\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      value2\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      precision\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isWithinBoundingX\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    isWithinBoundingX(undefined: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isWithinBoundingY\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    isWithinBoundingY(undefined: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_RESIZE_CURSORS\n                        \n                        \n                            MOUSE_MOVE_THROTTLE_MS\n                        \n                        \n                            RESIZE_ACTIVE_CLASS\n                        \n                        \n                            RESIZE_BOTTOM_HOVER_CLASS\n                        \n                        \n                            RESIZE_GHOST_ELEMENT_CLASS\n                        \n                        \n                            RESIZE_LEFT_HOVER_CLASS\n                        \n                        \n                            RESIZE_RIGHT_HOVER_CLASS\n                        \n                        \n                            RESIZE_TOP_HOVER_CLASS\n                        \n                    \n                \n            \n        \n    \n\n\n    src/resizable.directive.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                DEFAULT_RESIZE_CURSORS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            DEFAULT_RESIZE_CURSORS:     ResizeCursors\n    \n                        \n                    \n                        \n                            \n                                Type :     ResizeCursors\n    \n                            \n                        \n                        \n                            \n                                Default value : Object.freeze({\n      topLeft: 'nw-resize',\n      topRight: 'ne-resize',\n      bottomLeft: 'sw-resize',\n      bottomRight: 'se-resize',\n      leftOrRight: 'ew-resize',\n      topOrBottom: 'ns-resize'\n    })\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                MOUSE_MOVE_THROTTLE_MS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MOUSE_MOVE_THROTTLE_MS:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 50\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE_ACTIVE_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE_ACTIVE_CLASS:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'resize-active'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE_BOTTOM_HOVER_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE_BOTTOM_HOVER_CLASS:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'resize-bottom-hover'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE_GHOST_ELEMENT_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE_GHOST_ELEMENT_CLASS:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'resize-ghost-element'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE_LEFT_HOVER_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE_LEFT_HOVER_CLASS:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'resize-left-hover'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE_RIGHT_HOVER_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE_RIGHT_HOVER_CLASS:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'resize-right-hover'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE_TOP_HOVER_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE_TOP_HOVER_CLASS:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'resize-top-hover'\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
